{"version":3,"sources":["components/Checkbox.js","components/ToDoItem.js","components/ToDoEditItem.js","components/ToDoBoard.js","components/AddTask.js","components/Auth.js","components/ToDo.js","components/SignIn.js","components/SignUp.js","state/counter.js","components/Counter.js","content/Content.js","firebase/Firebase.js","navigation/Navigation.js","serviceWorker.js","index.js","App.js"],"names":["props","id","done","onCheck","Checkbox","label","toggle","style","margin","checked","onClick","checkDone","fetch","BASE_URL","method","body","JSON","stringify","then","handleOnDone","item","onEdit","onDelete","key","List","Item","Content","task","Button","size","icon","color","attached","itemId","Icon","name","primary","dateOfCreateTask","ToDoEditList","useState","editTask","setEditTask","taskError","setTaskError","setFormError","Form","Field","Input","fluid","type","value","onChange","event","target","Message","negative","Header","positive","preventDefault","error","taskLength","length","formattedFormData","onSave","disabled","onClose","ToDoListBoard","editTaskId","setEditTaskId","handleOnEdit","markedId","handleOnClose","handleOnSave","todo","Segment","divided","relaxed","map","ToDoEditItem","ToDoItem","AddTask","setTask","setDateOfCreateTask","Date","now","placeholder","onAdd","catch","err","alert","message","Auth","user","setUser","ref","setRef","useEffect","authRef","firebase","auth","onAuthStateChanged","children","textAlign","ToDo","setTodo","loading","setLoading","setError","fetchToDo","res","json","data","formattedData","Object","keys","sort","a","b","handleOnAction","Dimmer","active","Loader","Image","src","Grid","height","verticalAlign","width","ToDoBoard","email","setEmail","password","setPassword","redirect","setRedirect","handleOnChange","signIn","signInWithEmailAndPassword","to","Column","maxWidth","as","stacked","iconPosition","autoComplete","signUp","createUserWithEmailAndPassword","RESET","mapDispatchToProps","increment","decrement","reset","connect","state","counter","className","Container","text","Group","exact","path","component","Counter","SignIn","SignUp","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","FirebaseConfig","Navigation","Menu","inverted","position","signOut","Boolean","window","location","hostname","match","reducers","combineReducers","action","store","applyMiddleware","next","console","groupCollapsed","log","getState","result","groupEnd","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7bbee1b3.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { Checkbox } from \"semantic-ui-react\";\n\nimport { BASE_URL } from \"./ToDo\";\n\nexport default props => {\n  const { id, done, onCheck } = props;\n\n  const handleOnDone = (id, done) => {\n    const checkDone = {\n      done: !done\n    };\n    fetch(`${BASE_URL}/todo/${id}.json`, {\n      method: \"PATCH\",\n      body: JSON.stringify(checkDone)\n    }).then(() => {\n      onCheck();\n    });\n  };\n\n  return (\n    <Checkbox\n      label=\"done\"\n      toggle\n      style={{ margin: \"15px\" }}\n      checked={done}\n      onClick={() => handleOnDone(id, done)}\n    />\n  );\n};\n","import React from \"react\";\n\nimport { List, Button, Icon } from \"semantic-ui-react\";\n\nimport Checkbox from \"./Checkbox\";\nimport { BASE_URL } from \"./ToDo\";\n\nexport default props => {\n  const { item, id, onEdit, onDelete, onCheck } = props;\n\n  const handleOnClick = itemId => {\n    fetch(`${BASE_URL}/todo/${itemId}.json`, {\n      method: \"DELETE\"\n    }).then(() => {\n      onDelete();\n    });\n  };\n\n  const handleOnEditClick = () => {\n    onEdit(id);\n  };\n\n  return (\n    <div key={item.id}>\n      <List.Item>\n        <List.Content>{item.task}</List.Content>\n      </List.Item>\n      <Button\n        size=\"small\"\n        icon\n        color=\"red\"\n        attached=\"left\"\n        onClick={() => handleOnClick(item.id)}\n      >\n        <Icon name=\"close\" />\n      </Button>\n      <Button\n        size=\"small\"\n        icon\n        primary\n        attached=\"right\"\n        onClick={handleOnEditClick}\n      >\n        <Icon name=\"edit\" />\n      </Button>\n      <Checkbox\n        done={props.item.done}\n        onCheck={onCheck}\n        id={props.item.id}\n        item={props.item.task}\n      />\n      <List.Item>\n        <List.Content>{item.dateOfCreateTask}</List.Content>\n      </List.Item>\n      <hr />\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\n\nimport { Button, Form, Icon, List, Message, Input } from \"semantic-ui-react\";\n\nimport { BASE_URL } from \"./ToDo\";\nimport Checkbox from \"./Checkbox\";\n\nconst ToDoEditList = props => {\n  const { item } = props;\n\n  const [editTask, setEditTask] = useState(item.task);\n  const [taskError, setTaskError] = useState(false);\n  const [, setFormError] = useState(false);\n\n  const handleOnChange = event => {\n    setEditTask(event.target.value);\n  };\n\n  const handleOnSaveClick = event => {\n    event.preventDefault();\n\n    let error = false;\n\n    const taskLength = editTask.length;\n\n    if (taskLength < 5 || taskLength > 35) {\n      setTaskError(true);\n      error = true;\n    } else {\n      setTaskError(false);\n    }\n\n    if (error) {\n      setFormError(true);\n      return;\n    }\n    setFormError(false);\n\n    const formattedFormData = {\n      task: editTask\n    };\n\n    fetch(`${BASE_URL}/todo/${item.id}.json`, {\n      method: \"PATCH\",\n      body: JSON.stringify(formattedFormData)\n    }).then(() => {\n      props.onSave();\n    });\n  };\n\n  const handleOnCloseClick = () => {\n    props.onClose();\n  };\n\n  return (\n    <div key={item.id}>\n      <List.Item>\n        <Form.Field>\n          <Input\n            fluid\n            size=\"small\"\n            type=\"text\"\n            value={editTask}\n            name=\"task\"\n            onChange={handleOnChange}\n          />\n          {taskError ? (\n            <Message negative>\n              <Message.Header>Incorrect input</Message.Header>\n              <p>The task should be between 5 and 35 characters</p>\n            </Message>\n          ) : null}\n        </Form.Field>\n      </List.Item>\n      <Button\n        size=\"small\"\n        attached=\"left\"\n        positive\n        icon\n        onClick={handleOnSaveClick}\n        disabled={!item.task}\n      >\n        <Icon name=\"save\" />\n      </Button>\n      <Button size=\"small\" attached=\"right\" icon onClick={handleOnCloseClick}>\n        <Icon name=\"close\" />\n      </Button>\n      <Checkbox done={item.done} id={item.id} item={item.task} />\n      <hr />\n    </div>\n  );\n};\n\nexport default ToDoEditList;\n","import React, { useState } from \"react\";\n\nimport { List, Segment } from \"semantic-ui-react\";\n\nimport ToDoItem from \"./ToDoItem\";\nimport ToDoEditItem from \"./ToDoEditItem\";\n\nexport const BASE_URL = \"https://rest-api-jfdz12-sw.firebaseio.com\";\n\nconst ToDoListBoard = props => {\n  const [editTaskId, setEditTaskId] = useState(null);\n\n  const handleOnEdit = markedId => {\n    setEditTaskId(markedId);\n  };\n\n  const handleOnClose = () => {\n    setEditTaskId(null);\n  };\n\n  const handleOnSave = () => {\n    props.onSave();\n    setEditTaskId(null);\n  };\n\n  const { todo, onDelete, onCheck } = props;\n\n  return (\n    <Segment>\n      <List divided relaxed size=\"large\">\n        {todo.map(item => {\n          return editTaskId === item.id ? (\n            <ToDoEditItem\n              key={item.id}\n              done={item.done}\n              id={item.id}\n              item={item}\n              onClose={handleOnClose}\n              onSave={handleOnSave}\n              onDelete={onDelete}\n              onCheck={onCheck}\n              onEdit={handleOnEdit}\n            />\n          ) : (\n            <ToDoItem\n              key={item.id}\n              done={item.done}\n              id={item.id}\n              item={item}\n              onDelete={onDelete}\n              onCheck={onCheck}\n              onEdit={handleOnEdit}\n            />\n          );\n        })}\n      </List>\n    </Segment>\n  );\n};\n\nexport default ToDoListBoard;","import React, { useState } from \"react\";\n\nimport { Button, Form, Message, Icon, Input } from \"semantic-ui-react\";\n\nimport { BASE_URL } from \"./ToDo\";\n\nconst AddTask = props => {\n  const [task, setTask] = useState(\"\");\n  const [dateOfCreateTask, setDateOfCreateTask] = useState(\"\");\n  const [taskError, setTaskError] = useState(false);\n  const [, setFormError] = useState(false);\n\n  const handleOnChange = event => {\n    setTask(event.target.value);\n    setDateOfCreateTask(Date.now());\n  };\n\n  const handleOnClick = event => {\n    event.preventDefault();\n\n    let error = false;\n\n    const taskLength = task.length;\n\n    if (taskLength < 5 || taskLength > 35) {\n      setTaskError(true);\n      error = true;\n    } else {\n      setTaskError(false);\n    }\n\n    if (error) {\n      setFormError(true);\n      return;\n    }\n    setFormError(false);\n\n    const formattedFormData = {\n      task,\n      done: false,\n      dateOfCreateTask\n    };\n\n    fetch(`${BASE_URL}/todo.json`, {\n      method: \"POST\",\n      body: JSON.stringify(formattedFormData)\n    })\n      .then(() => {\n        props.onAdd();\n        setTask(\"\");\n        setDateOfCreateTask(\"\");\n      })\n      .catch(err => {\n        alert(err.message);\n      });\n  };\n\n  return (\n    <Form size=\"large\">\n      <h3>Add task</h3>\n      <Form.Field>\n        <Input\n          type=\"text\"\n          value={task}\n          onChange={handleOnChange}\n          placeholder=\"New task\"\n        />\n        {taskError ? (\n          <Message negative>\n            <Message.Header>Incorrect input</Message.Header>\n            <p>The task should be between 5 and 35 characters</p>\n          </Message>\n        ) : null}\n      </Form.Field>\n      <Button\n        size=\"small\"\n        type=\"submit\"\n        icon\n        color=\"green\"\n        onClick={handleOnClick}\n        disabled={!task}\n      >\n        <Icon name=\"add\" />\n      </Button>\n    </Form>\n  );\n};\n\nexport default AddTask;\n","import React, { useEffect, useState } from \"react\";\n\nimport firebase from \"firebase\";\n\nconst Auth = (props) => {\n  const [user, setUser] = useState(null);\n  const [ref, setRef] = useState(null);\n\n  useEffect(() => {\n    return () => {\n      const authRef = firebase.auth().onAuthStateChanged(user => {\n        setUser(user);\n      });\n      setRef(authRef);\n      if (ref) {\n        ref();\n      }\n    };\n  });\n\n  return user ? (\n    props.children\n  ) : (\n    <>\n      <div style={{ textAlign: \"center\" }}>\n        <h1>Please sign in</h1>\n      </div>\n    </>\n  );\n};\n\nexport default Auth;\n","import React, { useEffect, useState } from \"react\";\n\nimport { Segment, Dimmer, Loader, Image, Grid } from \"semantic-ui-react\";\n\nimport ToDoBoard from \"./ToDoBoard\";\nimport AddTask from \"./AddTask\";\nimport Auth from \"./Auth\";\n\nexport const BASE_URL = \"https://rest-api-jfdz12-sw.firebaseio.com\";\n\nconst ToDo = () => {\n  const [todo, setTodo] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const fetchToDo = () => {\n    fetch(`${BASE_URL}/todo.json`)\n      .then(res => res.json())\n      .then(data => {\n        const keys = Object.keys(data);\n        const formattedData = keys.map(key => {\n          return {\n            id: key,\n            ...data[key]\n          };\n        });\n        setLoading(false);\n        setTodo(\n          formattedData.sort(function(a, b) {\n            return b.dateOfCreateTask - a.dateOfCreateTask;\n          })\n        );\n      })\n      .catch(err => setError(err));\n  };\n\n  useEffect(() => {\n    fetchToDo();\n  }, []);\n\n  const handleOnAction = () => {\n    fetchToDo();\n  };\n\n  if (error) {\n    return <div>Error: {error}</div>;\n  }\n\n  if (loading) {\n    return (\n      <Segment>\n        <Dimmer active>\n          <Loader size=\"massive\">Loading</Loader>\n        </Dimmer>\n        <Image src=\"/images/wireframe/short-paragraph.png\" />\n        <Image src=\"/images/wireframe/short-paragraph.png\" />\n        <Image src=\"/images/wireframe/short-paragraph.png\" />\n        <Image src=\"/images/wireframe/short-paragraph.png\" />\n        <Image src=\"/images/wireframe/short-paragraph.png\" />\n        <Image src=\"/images/wireframe/short-paragraph.png\" />\n      </Segment>\n    );\n  }\n  return (\n    <Auth>\n      <Grid\n        textAlign=\"center\"\n        style={{ height: \"100vh\" }}\n        verticalAlign=\"middle\"\n      >\n        <Segment\n          style={{\n            width: 650\n          }}\n        >\n          <AddTask onAdd={handleOnAction} />\n          <ToDoBoard\n            todo={todo}\n            onDelete={handleOnAction}\n            onSave={handleOnAction}\n            onCheck={handleOnAction}\n          />\n        </Segment>\n      </Grid>\n    </Auth>\n  );\n};\n\nexport default ToDo;\n","import React, { useState } from \"react\";\nimport { Redirect } from \"react-router\";\nimport { Link } from \"react-router-dom\";\n\nimport firebase from \"firebase\";\n\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Segment,\n  Message\n} from \"semantic-ui-react\";\n\nexport default () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [redirect, setRedirect] = useState(false);\n\n  const handleOnChange = event => {\n    const { name, value } = event.target;\n\n    if (name === \"email\") {\n      setEmail(value);\n    }\n    if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const handleOnClick = event => {\n    event.preventDefault();\n\n    signIn();\n  };\n\n  const signIn = () => {\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then(() => {\n        setRedirect(true);\n      });\n  };\n\n  if (redirect) {\n    return <Redirect to={\"/\"} />;\n  }\n\n  return (\n    <Grid textAlign=\"center\" style={{ height: \"100vh\" }} verticalAlign=\"middle\">\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as=\"h2\" color=\"blue\" textAlign=\"center\">\n          {\"Log-in to your account\"}\n        </Header>\n        <Form size=\"large\">\n          <Segment stacked>\n            <Form.Input\n              fluid\n              icon=\"user\"\n              iconPosition=\"left\"\n              placeholder=\"E-mail address\"\n              autoComplete=\"email\"\n              value={email}\n              name=\"email\"\n              onChange={handleOnChange}\n            />\n            <Form.Input\n              fluid\n              icon=\"lock\"\n              iconPosition=\"left\"\n              placeholder=\"Password\"\n              autoComplete=\"current-password\"\n              type=\"password\"\n              value={password}\n              name=\"password\"\n              onChange={handleOnChange}\n            />\n            <Button color=\"blue\" fluid size=\"large\" onClick={handleOnClick}>\n              {\"Login\"}\n            </Button>\n          </Segment>\n        </Form>\n        <Message>\n          New to us? <Link to=\"/sign-up\">Sign Up</Link>\n        </Message>\n      </Grid.Column>\n    </Grid>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Redirect } from \"react-router\";\nimport { Link } from \"react-router-dom\";\n\nimport firebase from \"firebase\";\n\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Segment,\n  Message\n} from \"semantic-ui-react\";\n\nexport default () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [redirect, setRedirect] = useState(false);\n\n  const handleOnChange = event => {\n    const { name, value } = event.target;\n\n    if (name === \"email\") {\n      setEmail(value);\n    }\n    if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const handleOnClick = event => {\n    event.preventDefault();\n\n    signUp();\n  };\n\n  const signUp = () => {\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then(() => {\n        setRedirect(true);\n      });\n  };\n\n  if (redirect) {\n    return <Redirect to={\"/\"} />;\n  }\n\n  return (\n    <Grid textAlign=\"center\" style={{ height: \"100vh\" }} verticalAlign=\"middle\">\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as=\"h2\" color=\"blue\" textAlign=\"center\">\n          {\"Welcome\"}\n        </Header>\n        <Form size=\"large\">\n          <Segment stacked>\n            <Form.Input\n              fluid\n              icon=\"user\"\n              iconPosition=\"left\"\n              placeholder=\"E-mail address\"\n              autoComplete=\"username\"\n              value={email}\n              name=\"email\"\n              onChange={handleOnChange}\n            />\n            <Form.Input\n              fluid\n              icon=\"lock\"\n              iconPosition=\"left\"\n              placeholder=\"Password\"\n              autoComplete=\"current-password\"\n              type=\"password\"\n              value={password}\n              name=\"password\"\n              onChange={handleOnChange}\n            />\n            <Button color=\"blue\" fluid size=\"large\" onClick={handleOnClick}>\n              {\"Register\"}\n            </Button>\n          </Segment>\n        </Form>\n        <Message>\n          Already register? <Link to=\"/sign-in\">Sign In</Link>\n        </Message>\n      </Grid.Column>\n    </Grid>\n  );\n};\n","// ACTION NAMES\nconst INCREMENT = \"COUNTER/INCREMENT\";\nconst DECREMENT = \"COUNTER/DECREMENT\";\nconst RESET = \"COUNTER/RESET\";\n\n// INITIAL STATE\nconst initialState = 0\n\n// REDUCER\nexport default function(state = initialState, action) {\n    switch(action.type){\n        case INCREMENT: {\n            return state + 1\n        }\n        case DECREMENT: {\n            return state -1\n        }\n        case RESET: {\n            return initialState\n        }\n        default: \n        return state\n    }\n}\n\n//ACTION CREATOR\nexport const increment = () => ({type: INCREMENT})\nexport const decrement = () => ({type: DECREMENT})\nexport const reset = () => ({type: RESET})","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { increment, decrement, reset } from \"../state/counter\";\n\nimport { Container, Header, Button } from \"semantic-ui-react\";\n\nimport \"../App.css\";\n\nconst Counter = ({ increment, decrement, reset, counter }) => {\n  return (\n    <div className=\"counter\">\n      <Container text>\n        <Header className=\"counter_header\" as=\"h2\">Welcome to Counter</Header>\n        <p className=\"counter_text\">{`Current count: ${counter}`}</p>\n      </Container>\n      <Button.Group>\n        <Button onClick={decrement} color=\"red\">\n          DECREMENT\n        </Button>\n        <Button onClick={reset}>RESET</Button>\n        <Button onClick={increment} color=\"green\">\n          INCREMENT\n        </Button>\n      </Button.Group>\n    </div>\n  );\n};\n\n// Pobieramy pożądany kawałek stanu\nconst mapStateToProps = state => ({\n  counter: state.counter\n});\n\n// Dajemy możliwość wysyłania(dispatchowania) akcji z komponentu\nconst mapDispatchToProps = {\n  increment,\n  decrement,\n  reset\n};\n\n// Dzięki export default nie musimy wymyślać nowej nazwy dla Countera, który jest podłączony do store'a\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);\n","import React from \"react\";\nimport { Route, Switch } from \"react-router\";\n\nimport ToDo from \"../components/ToDo.js\";\nimport SignIn from '../components/SignIn.js';\nimport SignUp from '../components/SignUp.js';\nimport Counter from '../components/Counter';\n\nexport default () => {\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <div style={{ textAlign: \"center\" }}>\n          <h1>Welcome in simple app :)</h1>\n        </div>\n      </Route>\n      <Route path=\"/counter\" component={Counter} />\n      <Route path=\"/todo\" component={ToDo} />\n      <Route path=\"/sign-in\" component={SignIn} />\n      <Route path=\"/sign-up\" component={SignUp} />\n            )} />\n    </Switch>\n  );\n};","const firebaseConfig = {\n  apiKey: \"AIzaSyAdyvU2jhoxIzKcIMmIfHXtK5atQidL6TY\",\n  authDomain: \"rest-api-jfdz12-sw.firebaseapp.com\",\n  databaseURL: \"https://rest-api-jfdz12-sw.firebaseio.com\",\n  projectId: \"rest-api-jfdz12-sw\",\n  storageBucket: \"rest-api-jfdz12-sw.appspot.com\",\n  messagingSenderId: \"736124371432\",\n  appId: \"1:736124371432:web:8bcca6fa7828abd169645d\",\n  measurementId: \"G-25XJLCNXRE\"\n};\n\nexport default firebaseConfig;\n\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { Menu, Button } from \"semantic-ui-react\";\nimport firebase from \"firebase\";\n\nimport FirebaseConfig from \"../firebase/Firebase\";\n\nfirebase.initializeApp(FirebaseConfig);\n\nconst Navigation = () => {\n  const [user, setUser] = useState(null);\n\n  const handleSignOut = () => {\n    firebase.auth().signOut();\n  };\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged(user => {\n      setUser(user);\n    });\n  });\n\n  return (\n    <Menu inverted>\n      <Link to=\"/\">\n        <Menu.Item name=\"home\">Home</Menu.Item>\n      </Link>\n      <Link to=\"/todo\">\n        <Menu.Item name=\"todo\">ToDo App</Menu.Item>\n      </Link>\n      <Link to=\"/counter\">\n        <Menu.Item name=\"counter\">Counter</Menu.Item>\n      </Link>\n      <Menu.Menu position=\"right\">\n        {!!user ? (\n          <>\n            <Button inverted onClick={handleSignOut}>\n              Sign out\n            </Button>\n          </>\n        ) : (\n          <Link to=\"/sign-in\">\n            <Menu.Item name=\"Sign in\" />\n          </Link>\n        )}\n      </Menu.Menu>\n    </Menu>\n  );\n};\n\nexport default Navigation;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport counter from \"./state/counter\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst reducers = combineReducers({\n  counter\n});\n\nconst logger = store => next => action => {\n  console.groupCollapsed(action.type);\n  console.log(\"prev state: \", store.getState());\n  console.log(\"action: \", action);\n  const result = next(action);\n  console.log(\"next state: \", store.getState());\n  console.groupEnd();\n  return result;\n};\n\nconst middleware = applyMiddleware(logger);\n\nconst store = createStore(\n  reducers,\n  /* preloadedState, */\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport Content from \"./content/Content\";\nimport Navigation from \"./navigation/Navigation\";\n\nexport default function App() {\n  return (\n      <Router>\n        <Navigation />\n        <Content />\n      </Router>\n  );\n}\n"],"sourceRoot":""}