{"ast":null,"code":"import _slicedToArray from\"/home/szymon/Desktop/ToDo-App/todo-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{Button,Form,Icon,List,Message,Input}from\"semantic-ui-react\";import{BASE_URL}from\"./ToDo\";import Checkbox from\"./Checkbox\";var ToDoEditList=function ToDoEditList(props){var item=props.item;var _useState=useState(item.task),_useState2=_slicedToArray(_useState,2),editTask=_useState2[0],setEditTask=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),taskError=_useState4[0],setTaskError=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),setFormError=_useState6[1];var handleOnChange=function handleOnChange(event){setEditTask(event.target.value);};var handleOnSaveClick=function handleOnSaveClick(event){event.preventDefault();var error=false;var taskLength=editTask.length;if(taskLength<5||taskLength>35){setTaskError(true);error=true;}else{setTaskError(false);}if(error){setFormError(true);return;}setFormError(false);var formattedFormData={task:editTask};fetch(\"\".concat(BASE_URL,\"/todo/\").concat(item.id,\".json\"),{method:\"PATCH\",body:JSON.stringify(formattedFormData)}).then(function(){props.onSave();});};var handleOnCloseClick=function handleOnCloseClick(){props.onClose();};return React.createElement(\"div\",{key:item.id},React.createElement(List.Item,null,React.createElement(Form.Field,null,React.createElement(Input,{fluid:true,size:\"small\",type:\"text\",value:editTask,name:\"task\",onChange:handleOnChange}),taskError?React.createElement(Message,{negative:true},React.createElement(Message.Header,null,\"Incorrect input\"),React.createElement(\"p\",null,\"The task should be between 5 and 35 characters\")):null)),React.createElement(Button,{size:\"small\",attached:\"left\",positive:true,icon:true,onClick:handleOnSaveClick,disabled:!item.task},React.createElement(Icon,{name:\"save\"})),React.createElement(Button,{size:\"small\",attached:\"right\",icon:true,onClick:handleOnCloseClick},React.createElement(Icon,{name:\"close\"})),React.createElement(Checkbox,{done:item.done,id:item.id,item:item.task}),React.createElement(\"hr\",null));};export default ToDoEditList;","map":{"version":3,"sources":["/home/szymon/Desktop/ToDo-App/todo-app/src/components/ToDoEditItem.js"],"names":["React","useState","Button","Form","Icon","List","Message","Input","BASE_URL","Checkbox","ToDoEditList","props","item","task","editTask","setEditTask","taskError","setTaskError","setFormError","handleOnChange","event","target","value","handleOnSaveClick","preventDefault","error","taskLength","length","formattedFormData","fetch","id","method","body","JSON","stringify","then","onSave","handleOnCloseClick","onClose","done"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport { Button, Form, Icon, List, Message, Input } from \"semantic-ui-react\";\n\nimport { BASE_URL } from \"./ToDo\";\nimport Checkbox from \"./Checkbox\";\n\nconst ToDoEditList = props => {\n  const { item } = props;\n\n  const [editTask, setEditTask] = useState(item.task);\n  const [taskError, setTaskError] = useState(false);\n  const [, setFormError] = useState(false);\n\n  const handleOnChange = event => {\n    setEditTask(event.target.value);\n  };\n\n  const handleOnSaveClick = event => {\n    event.preventDefault();\n\n    let error = false;\n\n    const taskLength = editTask.length;\n\n    if (taskLength < 5 || taskLength > 35) {\n      setTaskError(true);\n      error = true;\n    } else {\n      setTaskError(false);\n    }\n\n    if (error) {\n      setFormError(true);\n      return;\n    }\n    setFormError(false);\n\n    const formattedFormData = {\n      task: editTask\n    };\n\n    fetch(`${BASE_URL}/todo/${item.id}.json`, {\n      method: \"PATCH\",\n      body: JSON.stringify(formattedFormData)\n    }).then(() => {\n      props.onSave();\n    });\n  };\n\n  const handleOnCloseClick = () => {\n    props.onClose();\n  };\n\n  return (\n    <div key={item.id}>\n      <List.Item>\n        <Form.Field>\n          <Input\n            fluid\n            size=\"small\"\n            type=\"text\"\n            value={editTask}\n            name=\"task\"\n            onChange={handleOnChange}\n          />\n          {taskError ? (\n            <Message negative>\n              <Message.Header>Incorrect input</Message.Header>\n              <p>The task should be between 5 and 35 characters</p>\n            </Message>\n          ) : null}\n        </Form.Field>\n      </List.Item>\n      <Button\n        size=\"small\"\n        attached=\"left\"\n        positive\n        icon\n        onClick={handleOnSaveClick}\n        disabled={!item.task}\n      >\n        <Icon name=\"save\" />\n      </Button>\n      <Button size=\"small\" attached=\"right\" icon onClick={handleOnCloseClick}>\n        <Icon name=\"close\" />\n      </Button>\n      <Checkbox done={item.done} id={item.id} item={item.task} />\n      <hr />\n    </div>\n  );\n};\n\nexport default ToDoEditList;\n"]},"metadata":{},"sourceType":"module"}