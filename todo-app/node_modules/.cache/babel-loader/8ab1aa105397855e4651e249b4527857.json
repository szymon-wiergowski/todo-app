{"ast":null,"code":"// ACTION NAMES\nconst FETCH = \"TODO/FETCH\";\nconst FETCH_SUCCES = \"TODO/FETCH_SUCCES\";\nconst FETCH_ERROR = \"TODO/FETCH_ERROR\";\nconst ADD = \"TODO/ADD\";\nconst TOGGLE_DONE = \"TODO/TOGGLE_DONE\";\nconst REMOVE = \"TODO/REMOVE\";\nconst BASE_URL = \"https://rest-api-jfdz12-sw.firebaseio.com\"; // INITIAL STATE\n\nconst initialState = {\n  todo: [],\n  task: \"\",\n  loading: false,\n  error: null,\n  adding: false,\n  dateOfCreateTask: \"\",\n  done: false\n}; // REDUCER\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case FETCH:\n      return { ...state,\n        loading: true,\n        error: null\n      };\n\n    case FETCH_SUCCES:\n      return { ...state,\n        loading: false,\n        adding: false,\n        todo: action.payload\n      };\n\n    case FETCH_ERROR:\n      return { ...state,\n        loading: false,\n        error: action.payload\n      };\n\n    case ADD:\n      return { ...state,\n        task: action.payload,\n        done: false,\n        dateOfCreateTask: Date.now()\n      };\n\n    case TOGGLE_DONE:\n      return state.map(todo => todo.id === action.payload ? { ...todo,\n        done: !todo.done\n      } : todo);\n\n    case REMOVE:\n      return state.filter(todo => !action.payload.includes(todo.id));\n\n    default:\n      return state;\n  }\n} // ACTION CREATOR\n\nexport const getTodo = () => dispatch => {\n  dispatch({\n    type: FETCH\n  });\n  fetch(`${BASE_URL}/todo.json`).then(res => res.json()).then(data => {\n    const keys = Object.keys(data);\n    const formattedData = keys.map(key => {\n      return {\n        id: key,\n        ...data[key]\n      };\n    });\n    dispatch(formattedData.sort(function (a, b) {\n      return b.dateOfCreateTask - a.dateOfCreateTask;\n    }));\n  }).catch(error => {\n    dispatch({\n      type: FETCH_ERROR,\n      payload: \"Something went wrong, please try again\"\n    });\n  });\n};","map":{"version":3,"sources":["/home/szymon/Desktop/ToDo-App/todo-app/src/state/todo.js"],"names":["FETCH","FETCH_SUCCES","FETCH_ERROR","ADD","TOGGLE_DONE","REMOVE","BASE_URL","initialState","todo","task","loading","error","adding","dateOfCreateTask","done","state","action","type","payload","Date","now","map","id","filter","includes","getTodo","dispatch","fetch","then","res","json","data","keys","Object","formattedData","key","sort","a","b","catch"],"mappings":"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","sourcesContent":["// ACTION NAMES\nconst FETCH = \"TODO/FETCH\";\nconst FETCH_SUCCES = \"TODO/FETCH_SUCCES\";\nconst FETCH_ERROR = \"TODO/FETCH_ERROR\";\nconst ADD = \"TODO/ADD\";\nconst TOGGLE_DONE = \"TODO/TOGGLE_DONE\";\nconst REMOVE = \"TODO/REMOVE\";\n\nconst BASE_URL = \"https://rest-api-jfdz12-sw.firebaseio.com\";\n\n// INITIAL STATE\nconst initialState = {\n  todo: [],\n  task: \"\",\n  loading: false,\n  error: null,\n  adding: false,\n  dateOfCreateTask: \"\",\n  done: false\n};\n\n// REDUCER\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case FETCH:\n      return { ...state, loading: true, error: null };\n    case FETCH_SUCCES:\n      return { ...state, loading: false, adding: false, todo: action.payload };\n    case FETCH_ERROR:\n      return { ...state, loading: false, error: action.payload };\n    case ADD:\n      return {\n        ...state,\n        task: action.payload,\n        done: false,\n        dateOfCreateTask: Date.now()\n      };\n    case TOGGLE_DONE:\n      return state.map(todo =>\n        todo.id === action.payload\n          ? {\n              ...todo,\n              done: !todo.done\n            }\n          : todo\n      );\n    case REMOVE:\n      return state.filter(todo => !action.payload.includes(todo.id));\n    default:\n      return state;\n  }\n}\n\n// ACTION CREATOR\nexport const getTodo = () => dispatch => {\n  dispatch({ type: FETCH });\n  fetch(`${BASE_URL}/todo.json`)\n    .then(res => res.json())\n    .then(data => {\n      const keys = Object.keys(data);\n      const formattedData = keys.map(key => {\n        return {\n          id: key,\n          ...data[key]\n        };\n      })\n      dispatch(\n        formattedData.sort(function(a, b) {\n          return b.dateOfCreateTask - a.dateOfCreateTask;\n        })\n      );\n    })\n    .catch(error => {\n      dispatch({\n        type: FETCH_ERROR,\n        payload: \"Something went wrong, please try again\"\n      });\n    });\n};\n"]},"metadata":{},"sourceType":"module"}