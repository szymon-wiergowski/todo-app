{"ast":null,"code":"import _slicedToArray from\"/home/szymon/Desktop/ToDo-App/todo-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{List,Segment}from\"semantic-ui-react\";import ToDoItem from\"./ToDoItem\";import ToDoEditItem from\"./ToDoEditItem\";export var BASE_URL=\"https://rest-api-jfdz12-sw.firebaseio.com\";var ToDoListBoard=function ToDoListBoard(props){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),editTaskId=_useState2[0],setEditTaskId=_useState2[1];var handleOnEdit=function handleOnEdit(markedId){setEditTaskId(markedId);};var handleOnClose=function handleOnClose(){setEditTaskId(null);};var handleOnSave=function handleOnSave(){props.onSave();setEditTaskId(null);};var todo=props.todo,onDelete=props.onDelete,onCheck=props.onCheck;return React.createElement(Segment,null,React.createElement(List,{divided:true,relaxed:true,size:\"large\"},todo.map(function(item){return editTaskId===item.id?React.createElement(ToDoEditItem,{key:item.id,todo:todo,done:item.done,id:item.id,item:item,onClose:handleOnClose,onSave:handleOnSave,onDelete:onDelete,onCheck:onCheck,onEdit:handleOnEdit}):React.createElement(ToDoItem,{key:item.id,todo:todo,done:item.done,id:item.id,item:item,onDelete:onDelete,onCheck:onCheck,onEdit:handleOnEdit});})));};export default ToDoListBoard;","map":{"version":3,"sources":["/home/szymon/Desktop/ToDo-App/todo-app/src/components/ToDoBoard.js"],"names":["React","useState","List","Segment","ToDoItem","ToDoEditItem","BASE_URL","ToDoListBoard","props","editTaskId","setEditTaskId","handleOnEdit","markedId","handleOnClose","handleOnSave","onSave","todo","onDelete","onCheck","map","item","id","done"],"mappings":"yHAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,OAASC,IAAT,CAAeC,OAAf,KAA8B,mBAA9B,CAEA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CAEA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,2CAAjB,CAEP,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,KAAK,CAAI,eACOP,QAAQ,CAAC,IAAD,CADf,wCACtBQ,UADsB,eACVC,aADU,eAG7B,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAC,QAAQ,CAAI,CAC/BF,aAAa,CAACE,QAAD,CAAb,CACD,CAFD,CAIA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1BH,aAAa,CAAC,IAAD,CAAb,CACD,CAFD,CAIA,GAAMI,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzBN,KAAK,CAACO,MAAN,GACAL,aAAa,CAAC,IAAD,CAAb,CACD,CAHD,CAX6B,GAgBrBM,CAAAA,IAhBqB,CAgBOR,KAhBP,CAgBrBQ,IAhBqB,CAgBfC,QAhBe,CAgBOT,KAhBP,CAgBfS,QAhBe,CAgBLC,OAhBK,CAgBOV,KAhBP,CAgBLU,OAhBK,CAkB7B,MACE,qBAAC,OAAD,MACE,oBAAC,IAAD,EAAM,OAAO,KAAb,CAAc,OAAO,KAArB,CAAsB,IAAI,CAAC,OAA3B,EACGF,IAAI,CAACG,GAAL,CAAS,SAAAC,IAAI,CAAI,CAChB,MAAOX,CAAAA,UAAU,GAAKW,IAAI,CAACC,EAApB,CACL,oBAAC,YAAD,EACE,GAAG,CAAED,IAAI,CAACC,EADZ,CAEE,IAAI,CAAEL,IAFR,CAGE,IAAI,CAAEI,IAAI,CAACE,IAHb,CAIE,EAAE,CAAEF,IAAI,CAACC,EAJX,CAKE,IAAI,CAAED,IALR,CAME,OAAO,CAAEP,aANX,CAOE,MAAM,CAAEC,YAPV,CAQE,QAAQ,CAAEG,QARZ,CASE,OAAO,CAAEC,OATX,CAUE,MAAM,CAAEP,YAVV,EADK,CAcL,oBAAC,QAAD,EACE,GAAG,CAAES,IAAI,CAACC,EADZ,CAEE,IAAI,CAAEL,IAFR,CAGE,IAAI,CAAEI,IAAI,CAACE,IAHb,CAIE,EAAE,CAAEF,IAAI,CAACC,EAJX,CAKE,IAAI,CAAED,IALR,CAME,QAAQ,CAAEH,QANZ,CAOE,OAAO,CAAEC,OAPX,CAQE,MAAM,CAAEP,YARV,EAdF,CAyBD,CA1BA,CADH,CADF,CADF,CAiCD,CAnDD,CAqDA,cAAeJ,CAAAA,aAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport { List, Segment } from \"semantic-ui-react\";\n\nimport ToDoItem from \"./ToDoItem\";\nimport ToDoEditItem from \"./ToDoEditItem\";\n\nexport const BASE_URL = \"https://rest-api-jfdz12-sw.firebaseio.com\";\n\nconst ToDoListBoard = props => {\n  const [editTaskId, setEditTaskId] = useState(null);\n\n  const handleOnEdit = markedId => {\n    setEditTaskId(markedId);\n  };\n\n  const handleOnClose = () => {\n    setEditTaskId(null);\n  };\n\n  const handleOnSave = () => {\n    props.onSave();\n    setEditTaskId(null);\n  };\n\n  const { todo, onDelete, onCheck } = props;\n\n  return (\n    <Segment>\n      <List divided relaxed size=\"large\">\n        {todo.map(item => {\n          return editTaskId === item.id ? (\n            <ToDoEditItem\n              key={item.id}\n              todo={todo}\n              done={item.done}\n              id={item.id}\n              item={item}\n              onClose={handleOnClose}\n              onSave={handleOnSave}\n              onDelete={onDelete}\n              onCheck={onCheck}\n              onEdit={handleOnEdit}\n            />\n          ) : (\n            <ToDoItem\n              key={item.id}\n              todo={todo}\n              done={item.done}\n              id={item.id}\n              item={item}\n              onDelete={onDelete}\n              onCheck={onCheck}\n              onEdit={handleOnEdit}\n            />\n          );\n        })}\n      </List>\n    </Segment>\n  );\n};\n\nexport default ToDoListBoard;"]},"metadata":{},"sourceType":"module"}