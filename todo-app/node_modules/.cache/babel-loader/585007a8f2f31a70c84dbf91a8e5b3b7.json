{"ast":null,"code":"var _jsxFileName = \"/home/szymon/Desktop/ToDo-App/todo-app/src/components/Counter.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { increment, decrement, reset } from \"../state/counter\";\nimport { Container, Header, Button } from \"semantic-ui-react\";\nimport \"../App.css\";\n\nconst Counter = ({\n  increment,\n  decrement,\n  reset,\n  counter\n}) => {\n  return React.createElement(\"div\", {\n    className: \"counter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(Container, {\n    text: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(Header, {\n    as: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Welcome to Counter\"), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Current count:\", counter)), React.createElement(Button.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: console.log(\"click\"),\n    color: \"red\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"DECREMENT\"), React.createElement(Button, {\n    onClick: console.log(\"click\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"RESET\"), React.createElement(Button, {\n    onClick: console.log(\"click\"),\n    color: \"green\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"INCREMENT\")));\n}; // Pobieramy pożądany kawałek stanu\n\n\nconst mapStateToProps = state => ({\n  counter: state.counter\n}); // Dajemy możliwość wysyłania(dispatchowania) akcji z komponentu\n\n\nconst mapDispatchToProps = {\n  increment,\n  decrement,\n  reset\n}; // Dzięki export default nie musimy wymyślać nowej nazwy dla Countera, który jest podłączony do store'a\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);","map":{"version":3,"sources":["/home/szymon/Desktop/ToDo-App/todo-app/src/components/Counter.js"],"names":["React","connect","increment","decrement","reset","Container","Header","Button","Counter","counter","console","log","mapStateToProps","state","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,KAA/B,QAA4C,kBAA5C;AAEA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,MAA5B,QAA0C,mBAA1C;AAEA,OAAO,YAAP;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEN,EAAAA,SAAF;AAAaC,EAAAA,SAAb;AAAwBC,EAAAA,KAAxB;AAA+BK,EAAAA;AAA/B,CAAD,KAA8C;AAC5D,SACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,IAAI,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAmBA,OAAnB,CAFF,CADF,EAKE,oBAAC,MAAD,CAAQ,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAjB;AAAuC,IAAA,KAAK,EAAC,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAIE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAED,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,EAKE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAED,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAjB;AAAuC,IAAA,KAAK,EAAC,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALF,CALF,CADF;AAiBD,CAlBD,C,CAoBA;;;AACA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCJ,EAAAA,OAAO,EAAEI,KAAK,CAACJ;AADiB,CAAL,CAA7B,C,CAIA;;;AACA,MAAMK,kBAAkB,GAAG;AACzBZ,EAAAA,SADyB;AAEzBC,EAAAA,SAFyB;AAGzBC,EAAAA;AAHyB,CAA3B,C,CAMA;;AACA,eAAeH,OAAO,CAACW,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CN,OAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { increment, decrement, reset } from \"../state/counter\";\n\nimport { Container, Header, Button } from \"semantic-ui-react\";\n\nimport \"../App.css\";\n\nconst Counter = ({ increment, decrement, reset, counter }) => {\n  return (\n    <div className=\"counter\">\n      <Container text>\n        <Header as=\"h2\">Welcome to Counter</Header>\n        <h4>Current count:{counter}</h4>\n      </Container>\n      <Button.Group>\n        <Button onClick={console.log(\"click\")} color=\"red\">\n          DECREMENT\n        </Button>\n        <Button onClick={console.log(\"click\")}>RESET</Button>\n        <Button onClick={console.log(\"click\")} color=\"green\">\n          INCREMENT\n        </Button>\n      </Button.Group>\n    </div>\n  );\n};\n\n// Pobieramy pożądany kawałek stanu\nconst mapStateToProps = state => ({\n  counter: state.counter\n})\n\n// Dajemy możliwość wysyłania(dispatchowania) akcji z komponentu\nconst mapDispatchToProps = {\n  increment,\n  decrement,\n  reset\n};\n\n// Dzięki export default nie musimy wymyślać nowej nazwy dla Countera, który jest podłączony do store'a\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter)\n"]},"metadata":{},"sourceType":"module"}