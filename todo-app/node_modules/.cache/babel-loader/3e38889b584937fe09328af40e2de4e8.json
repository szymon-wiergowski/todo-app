{"ast":null,"code":"var _jsxFileName = \"/home/szymon/Desktop/ToDo-App/todo-app/src/components/ToDoEditItem.js\";\nimport React, { useState } from \"react\";\nimport { Button, Form, Icon, List, Message, Input } from \"semantic-ui-react\";\nimport { BASE_URL } from \"./ToDo\";\nimport Checkbox from \"./Checkbox\";\n\nconst ToDoEditList = props => {\n  const {\n    item\n  } = props;\n  const [editTask, setEditTask] = useState(item.task);\n  const [taskError, setTaskError] = useState(false);\n  const [, setFormError] = useState(false);\n\n  const handleOnChange = event => {\n    setEditTask(event.target.value);\n  };\n\n  const handleOnSaveClick = event => {\n    event.preventDefault();\n    let error = false;\n    const taskLength = editTask.length;\n\n    if (taskLength < 5 || taskLength > 35) {\n      setTaskError(true);\n      error = true;\n    } else {\n      setTaskError(false);\n    }\n\n    if (error) {\n      setFormError(true);\n      return;\n    }\n\n    setFormError(false);\n    const formattedFormData = {\n      task: editTask\n    };\n    fetch(`${BASE_URL}/todo/${item.id}.json`, {\n      method: \"PATCH\",\n      body: JSON.stringify(formattedFormData)\n    }).then(() => {\n      props.onSave();\n    });\n  };\n\n  const handleOnCloseClick = () => {\n    props.onClose();\n  };\n\n  return React.createElement(\"div\", {\n    key: item.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(List.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Input, {\n    fluid: true,\n    size: \"small\",\n    type: \"text\",\n    value: editTask,\n    name: \"task\",\n    onChange: handleOnChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), taskError ? React.createElement(Message, {\n    negative: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Message.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Incorrect input\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"The task should be between 5 and 35 characters\")) : null)), React.createElement(Button, {\n    size: \"small\",\n    attached: \"left\",\n    positive: true,\n    icon: true,\n    onClick: handleOnSaveClick,\n    disabled: !item.task,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"save\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  })), React.createElement(Button, {\n    size: \"small\",\n    attached: \"right\",\n    icon: true,\n    onClick: handleOnCloseClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"close\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  })), React.createElement(Checkbox, {\n    done: item.done,\n    id: item.id,\n    item: item.task,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }));\n};\n\nexport default ToDoEditList;","map":{"version":3,"sources":["/home/szymon/Desktop/ToDo-App/todo-app/src/components/ToDoEditItem.js"],"names":["React","useState","Button","Form","Icon","List","Message","Input","BASE_URL","Checkbox","ToDoEditList","props","item","editTask","setEditTask","task","taskError","setTaskError","setFormError","handleOnChange","event","target","value","handleOnSaveClick","preventDefault","error","taskLength","length","formattedFormData","fetch","id","method","body","JSON","stringify","then","onSave","handleOnCloseClick","onClose","done"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport { Button, Form, Icon, List, Message, Input } from \"semantic-ui-react\";\n\nimport { BASE_URL } from \"./ToDo\";\nimport Checkbox from \"./Checkbox\";\n\nconst ToDoEditList = props => {\n  const { item } = props;\n\n  const [editTask, setEditTask] = useState(item.task);\n  const [taskError, setTaskError] = useState(false);\n  const [, setFormError] = useState(false);\n\n  const handleOnChange = event => {\n    setEditTask(event.target.value);\n  };\n\n  const handleOnSaveClick = event => {\n    event.preventDefault();\n\n    let error = false;\n\n    const taskLength = editTask.length;\n\n    if (taskLength < 5 || taskLength > 35) {\n      setTaskError(true);\n      error = true;\n    } else {\n      setTaskError(false);\n    }\n\n    if (error) {\n      setFormError(true);\n      return;\n    }\n    setFormError(false);\n\n    const formattedFormData = {\n      task: editTask\n    };\n\n    fetch(`${BASE_URL}/todo/${item.id}.json`, {\n      method: \"PATCH\",\n      body: JSON.stringify(formattedFormData)\n    }).then(() => {\n      props.onSave();\n    });\n  };\n\n  const handleOnCloseClick = () => {\n    props.onClose();\n  };\n\n  return (\n    <div key={item.id}>\n      <List.Item>\n        <Form.Field>\n          <Input\n            fluid\n            size=\"small\"\n            type=\"text\"\n            value={editTask}\n            name=\"task\"\n            onChange={handleOnChange}\n          />\n          {taskError ? (\n            <Message negative>\n              <Message.Header>Incorrect input</Message.Header>\n              <p>The task should be between 5 and 35 characters</p>\n            </Message>\n          ) : null}\n        </Form.Field>\n      </List.Item>\n      <Button\n        size=\"small\"\n        attached=\"left\"\n        positive\n        icon\n        onClick={handleOnSaveClick}\n        disabled={!item.task}\n      >\n        <Icon name=\"save\" />\n      </Button>\n      <Button size=\"small\" attached=\"right\" icon onClick={handleOnCloseClick}>\n        <Icon name=\"close\" />\n      </Button>\n      <Checkbox done={item.done} id={item.id} item={item.task} />\n      <hr />\n    </div>\n  );\n};\n\nexport default ToDoEditList;\n"]},"metadata":{},"sourceType":"module"}