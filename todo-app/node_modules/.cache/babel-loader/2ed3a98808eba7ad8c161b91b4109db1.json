{"ast":null,"code":"var _jsxFileName = \"/home/szymon/Desktop/homeworks/jfdz12-homeworks/zadanie_10/my-app/src/components/SignUp.js\";\nimport React, { useState } from \"react\";\nimport { Button, Form, Grid, Header, Segment, Message } from \"semantic-ui-react\";\nimport firebase from \"firebase\";\nimport { Redirect } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nexport default (() => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [redirect, setRedirect] = useState(false);\n\n  const handleOnChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n\n    if (name === \"email\") {\n      setEmail(value);\n    }\n\n    if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const handleOnClick = event => {\n    event.preventDefault();\n    signUp();\n  };\n\n  const signUp = () => {\n    firebase.auth().createUserWithEmailAndPassword(email, password).then(() => {\n      setRedirect(true);\n    });\n  };\n\n  if (redirect) {\n    return React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(Grid, {\n    textAlign: \"center\",\n    style: {\n      height: \"100vh\"\n    },\n    verticalAlign: \"middle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    style: {\n      maxWidth: 450\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Header, {\n    as: \"h2\",\n    color: \"blue\",\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Welcome\"), React.createElement(Form, {\n    size: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Segment, {\n    stacked: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Form.Input, {\n    fluid: true,\n    icon: \"user\",\n    iconPosition: \"left\",\n    placeholder: \"E-mail address\",\n    autoComplete: \"username\",\n    value: email,\n    name: \"email\",\n    onChange: handleOnChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    fluid: true,\n    icon: \"lock\",\n    iconPosition: \"left\",\n    placeholder: \"Password\",\n    autoComplete: \"current-password\",\n    type: \"password\",\n    value: password,\n    name: \"password\",\n    onChange: handleOnChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(Button, {\n    color: \"blue\",\n    fluid: true,\n    size: \"large\",\n    onClick: handleOnClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Register\"))), React.createElement(Message, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(React.Fragment, null, \"Already register? \", React.createElement(Link, {\n    to: \"/sign-in\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Sign In\")))));\n});","map":{"version":3,"sources":["/home/szymon/Desktop/homeworks/jfdz12-homeworks/zadanie_10/my-app/src/components/SignUp.js"],"names":["React","useState","Button","Form","Grid","Header","Segment","Message","firebase","Redirect","Link","email","setEmail","password","setPassword","redirect","setRedirect","handleOnChange","event","name","value","target","handleOnClick","preventDefault","signUp","auth","createUserWithEmailAndPassword","then","height","maxWidth"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Segment,\n  Message\n} from \"semantic-ui-react\";\nimport firebase from \"firebase\";\nimport { Redirect } from \"react-router\";\nimport { Link } from \"react-router-dom\";\n\nexport default () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [redirect, setRedirect] = useState(false);\n\n  const handleOnChange = event => {\n    const { name, value } = event.target;\n\n    if (name === \"email\") {\n      setEmail(value);\n    }\n    if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const handleOnClick = event => {\n    event.preventDefault();\n\n    signUp();\n  };\n\n  const signUp = () => {\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then(() => {\n        setRedirect(true);\n      });\n  };\n\n  if (redirect) {\n    return <Redirect to={\"/\"} />;\n  }\n\n  return (\n    <Grid textAlign=\"center\" style={{ height: \"100vh\" }} verticalAlign=\"middle\">\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as=\"h2\" color=\"blue\" textAlign=\"center\">\n          {\"Welcome\"}\n        </Header>\n        <Form size=\"large\">\n          <Segment stacked>\n            <Form.Input\n              fluid\n              icon=\"user\"\n              iconPosition=\"left\"\n              placeholder=\"E-mail address\"\n              autoComplete=\"username\"\n              value={email}\n              name=\"email\"\n              onChange={handleOnChange}\n            />\n            <Form.Input\n              fluid\n              icon=\"lock\"\n              iconPosition=\"left\"\n              placeholder=\"Password\"\n              autoComplete=\"current-password\"\n              type=\"password\"\n              value={password}\n              name=\"password\"\n              onChange={handleOnChange}\n            />\n\n            <Button color=\"blue\" fluid size=\"large\" onClick={handleOnClick}>\n              {\"Register\"}\n            </Button>\n          </Segment>\n        </Form>\n        <Message>\n          <>\n            Already register? <Link to=\"/sign-in\">Sign In</Link>\n          </>\n        </Message>\n      </Grid.Column>\n    </Grid>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}