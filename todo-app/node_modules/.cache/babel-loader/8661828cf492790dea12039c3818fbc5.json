{"ast":null,"code":"var _jsxFileName = \"/home/szymon/Desktop/ToDo-App/todo-app/src/components/ToDoBoard.js\";\nimport React, { useState } from \"react\";\nimport { List, Segment } from \"semantic-ui-react\";\nimport ToDoItem from \"./ToDoItem\";\nimport ToDoEditItem from \"./ToDoEditItem\";\nexport const BASE_URL = \"https://rest-api-jfdz12-sw.firebaseio.com\";\n\nconst ToDoListBoard = props => {\n  const [editTaskId, setEditTaskId] = useState(null);\n\n  const handleOnEdit = markedId => {\n    setEditTaskId(markedId);\n  };\n\n  const handleOnClose = () => {\n    setEditTaskId(null);\n  };\n\n  const handleOnSave = () => {\n    props.onSave();\n    setEditTaskId(null);\n  };\n\n  const {\n    todo,\n    onDelete,\n    onCheck\n  } = props;\n  return React.createElement(Segment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(List, {\n    divided: true,\n    relaxed: true,\n    size: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, todo.map(item => {\n    return editTaskId === item.id ? React.createElement(ToDoEditItem, {\n      key: item.id,\n      done: item.done,\n      id: item.id,\n      item: item,\n      onClose: handleOnClose,\n      onSave: handleOnSave,\n      onDelete: onDelete,\n      onCheck: onCheck,\n      onEdit: handleOnEdit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }) : React.createElement(ToDoItem, {\n      key: item.id,\n      done: item.done,\n      id: item.id,\n      item: item,\n      onDelete: onDelete,\n      onCheck: onCheck,\n      onEdit: handleOnEdit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    });\n  })));\n};\n\nexport default ToDoListBoard;","map":{"version":3,"sources":["/home/szymon/Desktop/ToDo-App/todo-app/src/components/ToDoBoard.js"],"names":["React","useState","List","Segment","ToDoItem","ToDoEditItem","BASE_URL","ToDoListBoard","props","editTaskId","setEditTaskId","handleOnEdit","markedId","handleOnClose","handleOnSave","onSave","todo","onDelete","onCheck","map","item","id","done"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,IAAT,EAAeC,OAAf,QAA8B,mBAA9B;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,OAAO,MAAMC,QAAQ,GAAG,2CAAjB;;AAEP,MAAMC,aAAa,GAAGC,KAAK,IAAI;AAC7B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,IAAD,CAA5C;;AAEA,QAAMU,YAAY,GAAGC,QAAQ,IAAI;AAC/BF,IAAAA,aAAa,CAACE,QAAD,CAAb;AACD,GAFD;;AAIA,QAAMC,aAAa,GAAG,MAAM;AAC1BH,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAFD;;AAIA,QAAMI,YAAY,GAAG,MAAM;AACzBN,IAAAA,KAAK,CAACO,MAAN;AACAL,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAHD;;AAKA,QAAM;AAAEM,IAAAA,IAAF;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA;AAAlB,MAA8BV,KAApC;AAEA,SACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,OAAO,MAAb;AAAc,IAAA,OAAO,MAArB;AAAsB,IAAA,IAAI,EAAC,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGQ,IAAI,CAACG,GAAL,CAASC,IAAI,IAAI;AAChB,WAAOX,UAAU,KAAKW,IAAI,CAACC,EAApB,GACL,oBAAC,YAAD;AACE,MAAA,GAAG,EAAED,IAAI,CAACC,EADZ;AAEE,MAAA,IAAI,EAAED,IAAI,CAACE,IAFb;AAGE,MAAA,EAAE,EAAEF,IAAI,CAACC,EAHX;AAIE,MAAA,IAAI,EAAED,IAJR;AAKE,MAAA,OAAO,EAAEP,aALX;AAME,MAAA,MAAM,EAAEC,YANV;AAOE,MAAA,QAAQ,EAAEG,QAPZ;AAQE,MAAA,OAAO,EAAEC,OARX;AASE,MAAA,MAAM,EAAEP,YATV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADK,GAaL,oBAAC,QAAD;AACE,MAAA,GAAG,EAAES,IAAI,CAACC,EADZ;AAEE,MAAA,IAAI,EAAED,IAAI,CAACE,IAFb;AAGE,MAAA,EAAE,EAAEF,IAAI,CAACC,EAHX;AAIE,MAAA,IAAI,EAAED,IAJR;AAKE,MAAA,QAAQ,EAAEH,QALZ;AAME,MAAA,OAAO,EAAEC,OANX;AAOE,MAAA,MAAM,EAAEP,YAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF;AAuBD,GAxBA,CADH,CADF,CADF;AA+BD,CAjDD;;AAmDA,eAAeJ,aAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport { List, Segment } from \"semantic-ui-react\";\n\nimport ToDoItem from \"./ToDoItem\";\nimport ToDoEditItem from \"./ToDoEditItem\";\n\nexport const BASE_URL = \"https://rest-api-jfdz12-sw.firebaseio.com\";\n\nconst ToDoListBoard = props => {\n  const [editTaskId, setEditTaskId] = useState(null);\n\n  const handleOnEdit = markedId => {\n    setEditTaskId(markedId);\n  };\n\n  const handleOnClose = () => {\n    setEditTaskId(null);\n  };\n\n  const handleOnSave = () => {\n    props.onSave();\n    setEditTaskId(null);\n  };\n\n  const { todo, onDelete, onCheck } = props;\n\n  return (\n    <Segment>\n      <List divided relaxed size=\"large\">\n        {todo.map(item => {\n          return editTaskId === item.id ? (\n            <ToDoEditItem\n              key={item.id}\n              done={item.done}\n              id={item.id}\n              item={item}\n              onClose={handleOnClose}\n              onSave={handleOnSave}\n              onDelete={onDelete}\n              onCheck={onCheck}\n              onEdit={handleOnEdit}\n            />\n          ) : (\n            <ToDoItem\n              key={item.id}\n              done={item.done}\n              id={item.id}\n              item={item}\n              onDelete={onDelete}\n              onCheck={onCheck}\n              onEdit={handleOnEdit}\n            />\n          );\n        })}\n      </List>\n    </Segment>\n  );\n};\n\nexport default ToDoListBoard;"]},"metadata":{},"sourceType":"module"}