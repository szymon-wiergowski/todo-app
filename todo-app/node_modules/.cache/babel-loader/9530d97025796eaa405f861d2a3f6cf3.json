{"ast":null,"code":"var _jsxFileName = \"/home/szymon/Desktop/ToDo-App/todo-app/src/contexts/AuthContext.js\";\nimport React from \"react\";\nexport const AuthContext = React.createContext(null);\n\nconst AuthContextProvider = props => {\n  const [user, setUser] = useState(null);\n  const [ref, setRef] = useState(null);\n  useEffect(() => {\n    return () => {\n      const authRef = firebase.auth().onAuthStateChanged(user => {\n        setUser(user);\n      });\n      setRef(authRef);\n\n      if (ref) {\n        ref();\n      }\n    };\n  });\n  const context = {\n    user\n  };\n  return React.createElement(AuthContextProvider, {\n    value: context,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default AuthContextProvider;\n{\n  /* <>\n  <div style={{ textAlign: \"center\" }}>\n    <h1>Please sign in</h1>\n  </div>\n  </>; */\n}","map":{"version":3,"sources":["/home/szymon/Desktop/ToDo-App/todo-app/src/contexts/AuthContext.js"],"names":["React","AuthContext","createContext","AuthContextProvider","props","user","setUser","useState","ref","setRef","useEffect","authRef","firebase","auth","onAuthStateChanged","context","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,WAAW,GAAGD,KAAK,CAACE,aAAN,CAAoB,IAApB,CAApB;;AAEP,MAAMC,mBAAmB,GAAGC,KAAK,IAAI;AACnC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBC,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBF,QAAQ,CAAC,IAAD,CAA9B;AAEAG,EAAAA,SAAS,CAAC,MAAM;AACd,WAAO,MAAM;AACX,YAAMC,OAAO,GAAGC,QAAQ,CAACC,IAAT,GAAgBC,kBAAhB,CAAmCT,IAAI,IAAI;AACzDC,QAAAA,OAAO,CAACD,IAAD,CAAP;AACD,OAFe,CAAhB;AAGAI,MAAAA,MAAM,CAACE,OAAD,CAAN;;AACA,UAAIH,GAAJ,EAAS;AACPA,QAAAA,GAAG;AACJ;AACF,KARD;AASD,GAVQ,CAAT;AAYA,QAAMO,OAAO,GAAG;AAAEV,IAAAA;AAAF,GAAhB;AAEA,SACE,oBAAC,mBAAD;AAAqB,IAAA,KAAK,EAAEU,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKX,KAAK,CAACY,QADX,CADF;AAKD,CAvBD;;AAyBA,eAAeb,mBAAf;AAEA;AACE;;;;;AAKD","sourcesContent":["import React from \"react\";\n\nexport const AuthContext = React.createContext(null);\n\nconst AuthContextProvider = props => {\n  const [user, setUser] = useState(null);\n  const [ref, setRef] = useState(null);\n\n  useEffect(() => {\n    return () => {\n      const authRef = firebase.auth().onAuthStateChanged(user => {\n        setUser(user);\n      });\n      setRef(authRef);\n      if (ref) {\n        ref();\n      }\n    };\n  });\n\n  const context = { user };\n\n  return (\n    <AuthContextProvider value={context}>\n        {props.children}\n    </AuthContextProvider>\n  );\n};\n\nexport default AuthContextProvider;\n\n{\n  /* <>\n  <div style={{ textAlign: \"center\" }}>\n    <h1>Please sign in</h1>\n  </div>\n</>; */\n}\n"]},"metadata":{},"sourceType":"module"}