{"ast":null,"code":"import _objectSpread from\"/home/szymon/Desktop/ToDo-App/todo-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/szymon/Desktop/ToDo-App/todo-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{Segment,Dimmer,Loader,Image,Grid}from\"semantic-ui-react\";import ToDoBoard from\"./ToDoBoard\";import AddTask from\"./AddTask\";import Auth from\"./Auth\";export var BASE_URL=\"https://rest-api-jfdz12-sw.firebaseio.com\";var ToDo=function ToDo(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),todo=_useState2[0],setTodo=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),error=_useState6[0],setError=_useState6[1];var fetchToDo=function fetchToDo(){fetch(\"\".concat(BASE_URL,\"/todo.json\")).then(function(res){return res.json();}).then(function(data){var keys=Object.keys(data);var formattedData=keys.map(function(key){return _objectSpread({id:key},data[key]);});setLoading(false);setTodo(formattedData.sort(function(a,b){return b.dateOfCreateTask-a.dateOfCreateTask;}));}).catch(function(err){return setError(err);});};useEffect(function(){fetchToDo();},[]);var handleOnAction=function handleOnAction(){fetchToDo();};if(error){return React.createElement(\"div\",null,\"Error: \",error);}if(loading){return React.createElement(Segment,null,React.createElement(Dimmer,{active:true},React.createElement(Loader,{size:\"medium\"},\"Loading\")),React.createElement(Image,{src:\"/images/wireframe/short-paragraph.png\"}));}return React.createElement(Auth,null,React.createElement(Grid,{textAlign:\"center\",style:{height:\"100vh\"},verticalAlign:\"middle\"},React.createElement(Segment,{style:{width:650}},React.createElement(AddTask,{onAdd:handleOnAction}),React.createElement(ToDoBoard,{todo:todo,onDelete:handleOnAction,onSave:handleOnAction,onCheck:handleOnAction}))));};export default ToDo;","map":{"version":3,"sources":["/home/szymon/Desktop/ToDo-App/todo-app/src/components/ToDo.js"],"names":["React","useEffect","useState","Segment","Dimmer","Loader","Image","Grid","ToDoBoard","AddTask","Auth","BASE_URL","ToDo","todo","setTodo","loading","setLoading","error","setError","fetchToDo","fetch","then","res","json","data","keys","Object","formattedData","map","key","id","sort","a","b","dateOfCreateTask","catch","err","handleOnAction","height","width"],"mappings":"iPAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CAEA,OAASC,OAAT,CAAkBC,MAAlB,CAA0BC,MAA1B,CAAkCC,KAAlC,CAAyCC,IAAzC,KAAqD,mBAArD,CAEA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CAEA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,2CAAjB,CAEP,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAAM,eACOV,QAAQ,CAAC,EAAD,CADf,wCACVW,IADU,eACJC,OADI,8BAEaZ,QAAQ,CAAC,IAAD,CAFrB,yCAEVa,OAFU,eAEDC,UAFC,8BAGSd,QAAQ,CAAC,IAAD,CAHjB,yCAGVe,KAHU,eAGHC,QAHG,eAKjB,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtBC,KAAK,WAAIT,QAAJ,eAAL,CACGU,IADH,CACQ,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAJ,EAAJ,EADX,EAEGF,IAFH,CAEQ,SAAAG,IAAI,CAAI,CACZ,GAAMC,CAAAA,IAAI,CAAGC,MAAM,CAACD,IAAP,CAAYD,IAAZ,CAAb,CACA,GAAMG,CAAAA,aAAa,CAAGF,IAAI,CAACG,GAAL,CAAS,SAAAC,GAAG,CAAI,CACpC,sBACEC,EAAE,CAAED,GADN,EAEKL,IAAI,CAACK,GAAD,CAFT,EAID,CALqB,CAAtB,CAMAb,UAAU,CAAC,KAAD,CAAV,CACAF,OAAO,CACLa,aAAa,CAACI,IAAd,CAAmB,SAASC,CAAT,CAAYC,CAAZ,CAAe,CAChC,MAAOA,CAAAA,CAAC,CAACC,gBAAF,CAAqBF,CAAC,CAACE,gBAA9B,CACD,CAFD,CADK,CAAP,CAKD,CAhBH,EAiBGC,KAjBH,CAiBS,SAAAC,GAAG,QAAIlB,CAAAA,QAAQ,CAACkB,GAAD,CAAZ,EAjBZ,EAkBD,CAnBD,CAqBAnC,SAAS,CAAC,UAAM,CACdkB,SAAS,GACV,CAFQ,CAEN,EAFM,CAAT,CAIA,GAAMkB,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CAC3BlB,SAAS,GACV,CAFD,CAIA,GAAIF,KAAJ,CAAW,CACT,MAAO,0CAAaA,KAAb,CAAP,CACD,CAED,GAAIF,OAAJ,CAAa,CACX,MACE,qBAAC,OAAD,MACE,oBAAC,MAAD,EAAQ,MAAM,KAAd,EACE,oBAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,YADF,CADF,CAIE,oBAAC,KAAD,EAAO,GAAG,CAAC,uCAAX,EAJF,CADF,CAQD,CACD,MACE,qBAAC,IAAD,MACE,oBAAC,IAAD,EACE,SAAS,CAAC,QADZ,CAEE,KAAK,CAAE,CAAEuB,MAAM,CAAE,OAAV,CAFT,CAGE,aAAa,CAAC,QAHhB,EAKE,oBAAC,OAAD,EACE,KAAK,CAAE,CACLC,KAAK,CAAE,GADF,CADT,EAKE,oBAAC,OAAD,EAAS,KAAK,CAAEF,cAAhB,EALF,CAME,oBAAC,SAAD,EACE,IAAI,CAAExB,IADR,CAEE,QAAQ,CAAEwB,cAFZ,CAGE,MAAM,CAAEA,cAHV,CAIE,OAAO,CAAEA,cAJX,EANF,CALF,CADF,CADF,CAuBD,CAvED,CAyEA,cAAezB,CAAAA,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport { Segment, Dimmer, Loader, Image, Grid } from \"semantic-ui-react\";\n\nimport ToDoBoard from \"./ToDoBoard\";\nimport AddTask from \"./AddTask\";\nimport Auth from \"./Auth\";\n\nexport const BASE_URL = \"https://rest-api-jfdz12-sw.firebaseio.com\";\n\nconst ToDo = () => {\n  const [todo, setTodo] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const fetchToDo = () => {\n    fetch(`${BASE_URL}/todo.json`)\n      .then(res => res.json())\n      .then(data => {\n        const keys = Object.keys(data);\n        const formattedData = keys.map(key => {\n          return {\n            id: key,\n            ...data[key]\n          };\n        });\n        setLoading(false);\n        setTodo(\n          formattedData.sort(function(a, b) {\n            return b.dateOfCreateTask - a.dateOfCreateTask;\n          })\n        );\n      })\n      .catch(err => setError(err));\n  };\n\n  useEffect(() => {\n    fetchToDo();\n  }, []);\n\n  const handleOnAction = () => {\n    fetchToDo();\n  };\n\n  if (error) {\n    return <div>Error: {error}</div>;\n  }\n\n  if (loading) {\n    return (\n      <Segment>\n        <Dimmer active>\n          <Loader size=\"medium\">Loading</Loader>\n        </Dimmer>\n        <Image src=\"/images/wireframe/short-paragraph.png\" />\n      </Segment>\n    );\n  }\n  return (\n    <Auth>\n      <Grid\n        textAlign=\"center\"\n        style={{ height: \"100vh\" }}\n        verticalAlign=\"middle\"\n      >\n        <Segment\n          style={{\n            width: 650\n          }}\n        >\n          <AddTask onAdd={handleOnAction} />\n          <ToDoBoard\n            todo={todo}\n            onDelete={handleOnAction}\n            onSave={handleOnAction}\n            onCheck={handleOnAction}\n          />\n        </Segment>\n      </Grid>\n    </Auth>\n  );\n};\n\nexport default ToDo;"]},"metadata":{},"sourceType":"module"}