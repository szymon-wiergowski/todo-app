{"ast":null,"code":"import _objectSpread from \"/home/szymon/Desktop/ToDo-App/todo-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/szymon/Desktop/ToDo-App/todo-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/szymon/Desktop/ToDo-App/todo-app/src/components/ToDo.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Segment, Dimmer, Loader, Image, Grid } from \"semantic-ui-react\";\nimport ToDoBoard from \"./ToDoBoard\";\nimport AddTask from \"./AddTask\";\nimport Auth from \"./Auth\";\nexport const BASE_URL = \"https://rest-api-jfdz12-sw.firebaseio.com\";\n\nconst ToDo = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        todo = _useState2[0],\n        setTodo = _useState2[1];\n\n  const _useState3 = useState(true),\n        _useState4 = _slicedToArray(_useState3, 2),\n        loading = _useState4[0],\n        setLoading = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        error = _useState6[0],\n        setError = _useState6[1];\n\n  const fetchToDo = () => {\n    fetch(`${BASE_URL}/todo.json`).then(res => res.json()).then(data => {\n      const keys = Object.keys(data);\n      const formattedData = keys.map(key => {\n        return _objectSpread({\n          id: key\n        }, data[key]);\n      });\n      setLoading(false);\n      setTodo(formattedData.sort(function (a, b) {\n        return b.dateOfCreateTask - a.dateOfCreateTask;\n      }));\n    }).catch(err => setError(err));\n  };\n\n  useEffect(() => {\n    fetchToDo();\n  }, []);\n\n  const handleOnAction = () => {\n    fetchToDo();\n  };\n\n  if (error) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Error: \", error);\n  }\n\n  if (loading) {\n    return React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Dimmer, {\n      active: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Loader, {\n      size: \"medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Loading\")), React.createElement(Image, {\n      src: \"/images/wireframe/short-paragraph.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(Auth, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    textAlign: \"center\",\n    style: {\n      height: \"100vh\"\n    },\n    verticalAlign: \"middle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Segment, {\n    style: {\n      width: 650\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(AddTask, {\n    onAdd: handleOnAction,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(ToDoBoard, {\n    todo: todo,\n    onDelete: handleOnAction,\n    onSave: handleOnAction,\n    onCheck: handleOnAction,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }))));\n};\n\nexport default ToDo; // class ToDo extends React.Component {\n//   state = {\n//     todo: [],\n//     loading: true,\n//     error: null\n//   };\n//   fetchToDo = () => {\n//     fetch(`${BASE_URL}/todo.json`)\n//       .then(res => res.json())\n//       .then(data => {\n//         const keys = Object.keys(data);\n//         const formattedData = keys.map(key => {\n//           return {\n//             id: key,\n//             ...data[key]\n//           };\n//         });\n//         this.setState({\n//           loading: false,\n//           todo: formattedData.sort(function(a, b) {\n//             return b.dateOfCreateTask - a.dateOfCreateTask;\n//           })\n//         });\n//       })\n//       .catch(err =>\n//         this.setState({\n//           error: err\n//         })\n//       );\n//   };\n//   componentDidMount() {\n//     this.fetchToDo();\n//   }\n//   handleOnAction = () => {\n//     this.fetchToDo();\n//   };\n//   render() {\n//     const { todo, error, loading } = this.state;\n//     if (error) {\n//       return <div>Error: {error}</div>;\n//     }\n//     if (loading) {\n//       return (\n//         <Segment>\n//           <Dimmer active>\n//             <Loader size=\"medium\">Loading</Loader>\n//           </Dimmer>\n//           <Image src=\"/images/wireframe/short-paragraph.png\" />\n//         </Segment>\n//       );\n//     }\n//     return (\n//       <Auth>\n//         <Grid\n//           textAlign=\"center\"\n//           style={{ height: \"100vh\" }}\n//           verticalAlign=\"middle\"\n//         >\n//           <Segment\n//             style={{\n//               width: 650\n//             }}\n//           >\n//             <AddTask onAdd={this.handleOnAction} />\n//             <ToDoBoard\n//               todo={todo}\n//               onDelete={this.handleOnAction}\n//               onSave={this.handleOnAction}\n//               onCheck={this.handleOnAction}\n//             />\n//           </Segment>\n//         </Grid>\n//       </Auth>\n//     );\n//   }\n// }","map":{"version":3,"sources":["/home/szymon/Desktop/ToDo-App/todo-app/src/components/ToDo.js"],"names":["React","useEffect","useState","Segment","Dimmer","Loader","Image","Grid","ToDoBoard","AddTask","Auth","BASE_URL","ToDo","todo","setTodo","loading","setLoading","error","setError","fetchToDo","fetch","then","res","json","data","keys","Object","formattedData","map","key","id","sort","a","b","dateOfCreateTask","catch","err","handleOnAction","height","width"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport { Segment, Dimmer, Loader, Image, Grid } from \"semantic-ui-react\";\n\nimport ToDoBoard from \"./ToDoBoard\";\nimport AddTask from \"./AddTask\";\nimport Auth from \"./Auth\";\n\nexport const BASE_URL = \"https://rest-api-jfdz12-sw.firebaseio.com\";\n\nconst ToDo = () => {\n  const [todo, setTodo] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const fetchToDo = () => {\n    fetch(`${BASE_URL}/todo.json`)\n      .then(res => res.json())\n      .then(data => {\n        const keys = Object.keys(data);\n        const formattedData = keys.map(key => {\n          return {\n            id: key,\n            ...data[key]\n          };\n        });\n        setLoading(false);\n        setTodo(\n          formattedData.sort(function(a, b) {\n            return b.dateOfCreateTask - a.dateOfCreateTask;\n          })\n        );\n      })\n      .catch(err => setError(err));\n  };\n\n  useEffect(() => {\n    fetchToDo();\n  }, []);\n\n  const handleOnAction = () => {\n    fetchToDo();\n  };\n\n  if (error) {\n    return <div>Error: {error}</div>;\n  }\n\n  if (loading) {\n    return (\n      <Segment>\n        <Dimmer active>\n          <Loader size=\"medium\">Loading</Loader>\n        </Dimmer>\n        <Image src=\"/images/wireframe/short-paragraph.png\" />\n      </Segment>\n    );\n  }\n  return (\n    <Auth>\n      <Grid\n        textAlign=\"center\"\n        style={{ height: \"100vh\" }}\n        verticalAlign=\"middle\"\n      >\n        <Segment\n          style={{\n            width: 650\n          }}\n        >\n          <AddTask onAdd={handleOnAction} />\n          <ToDoBoard\n            todo={todo}\n            onDelete={handleOnAction}\n            onSave={handleOnAction}\n            onCheck={handleOnAction}\n          />\n        </Segment>\n      </Grid>\n    </Auth>\n  );\n};\n\nexport default ToDo;\n\n// class ToDo extends React.Component {\n//   state = {\n//     todo: [],\n//     loading: true,\n//     error: null\n//   };\n\n//   fetchToDo = () => {\n//     fetch(`${BASE_URL}/todo.json`)\n//       .then(res => res.json())\n//       .then(data => {\n//         const keys = Object.keys(data);\n//         const formattedData = keys.map(key => {\n//           return {\n//             id: key,\n//             ...data[key]\n//           };\n//         });\n//         this.setState({\n//           loading: false,\n//           todo: formattedData.sort(function(a, b) {\n//             return b.dateOfCreateTask - a.dateOfCreateTask;\n//           })\n//         });\n//       })\n//       .catch(err =>\n//         this.setState({\n//           error: err\n//         })\n//       );\n//   };\n\n//   componentDidMount() {\n//     this.fetchToDo();\n//   }\n\n//   handleOnAction = () => {\n//     this.fetchToDo();\n//   };\n\n//   render() {\n//     const { todo, error, loading } = this.state;\n\n//     if (error) {\n//       return <div>Error: {error}</div>;\n//     }\n\n//     if (loading) {\n//       return (\n//         <Segment>\n//           <Dimmer active>\n//             <Loader size=\"medium\">Loading</Loader>\n//           </Dimmer>\n//           <Image src=\"/images/wireframe/short-paragraph.png\" />\n//         </Segment>\n//       );\n//     }\n//     return (\n//       <Auth>\n//         <Grid\n//           textAlign=\"center\"\n//           style={{ height: \"100vh\" }}\n//           verticalAlign=\"middle\"\n//         >\n//           <Segment\n//             style={{\n//               width: 650\n//             }}\n//           >\n//             <AddTask onAdd={this.handleOnAction} />\n//             <ToDoBoard\n//               todo={todo}\n//               onDelete={this.handleOnAction}\n//               onSave={this.handleOnAction}\n//               onCheck={this.handleOnAction}\n//             />\n//           </Segment>\n//         </Grid>\n//       </Auth>\n//     );\n//   }\n// }\n"]},"metadata":{},"sourceType":"module"}