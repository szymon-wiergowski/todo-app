{"ast":null,"code":"var _jsxFileName = \"/home/szymon/Desktop/homeworks/jfdz12-homeworks/zadanie_10/my-app/src/components/ToDoEditList.js\";\nimport React from \"react\";\nimport { Button, Form, Icon, List, Message } from \"semantic-ui-react\";\nimport { BASE_URL } from \"./ToDo\";\nimport Checkbox from \"./Checkbox\";\nexport default class ToDoEditList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = { ...this.props.item,\n      id: null,\n      taskError: false,\n      formError: false\n    };\n\n    this.handleOnChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleOnSaveClick = event => {\n      event.preventDefault();\n      let error = false;\n      const taskLength = this.state.task.length;\n\n      if (taskLength < 5 || taskLength > 25) {\n        this.setState({\n          taskError: true\n        });\n        error = true;\n      } else {\n        this.setState({\n          taskError: false\n        });\n      }\n\n      if (error) {\n        this.setState({\n          formError: true\n        });\n        return;\n      }\n\n      this.setState({\n        formError: false\n      });\n      const formattedFormData = { ...this.state,\n        taskError: null,\n        formError: null\n      };\n      fetch(`${BASE_URL}/todo/${this.props.item.id}.json`, {\n        method: \"PUT\",\n        body: JSON.stringify(formattedFormData)\n      }).then(() => {\n        this.props.onSave();\n      });\n    };\n\n    this.handleOnCloseClick = () => {\n      this.props.onClose();\n    };\n  }\n\n  render() {\n    const {\n      item\n    } = this.props;\n    const {\n      task,\n      taskError\n    } = this.state;\n    return React.createElement(\"div\", {\n      key: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(List.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      value: task,\n      name: \"task\",\n      onChange: this.handleOnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), taskError ? React.createElement(Message, {\n      negative: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Message.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Incorrect input\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"The task should be between 5 and 25 characters\")) : null)), React.createElement(Button, {\n      size: \"small\",\n      attached: \"left\",\n      positive: true,\n      icon: true,\n      onClick: this.handleOnSaveClick,\n      disabled: !task,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"save\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })), React.createElement(Button, {\n      size: \"small\",\n      attached: \"right\",\n      icon: true,\n      onClick: this.handleOnCloseClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"close\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })), React.createElement(Checkbox, {\n      done: item.done,\n      id: item.id,\n      item: item.task,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/szymon/Desktop/homeworks/jfdz12-homeworks/zadanie_10/my-app/src/components/ToDoEditList.js"],"names":["React","Button","Form","Icon","List","Message","BASE_URL","Checkbox","ToDoEditList","Component","state","props","item","id","taskError","formError","handleOnChange","event","setState","target","name","value","handleOnSaveClick","preventDefault","error","taskLength","task","length","formattedFormData","fetch","method","body","JSON","stringify","then","onSave","handleOnCloseClick","onClose","render","done"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport { Button, Form, Icon, List, Message } from \"semantic-ui-react\";\n\nimport { BASE_URL } from \"./ToDo\";\nimport Checkbox from \"./Checkbox\";\n\nexport default class ToDoEditList extends React.Component {\n  state = {\n    ...this.props.item,\n    id: null,\n    taskError: false,\n    formError: false\n  };\n\n  handleOnChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleOnSaveClick = event => {\n    event.preventDefault();\n\n    let error = false;\n\n    const taskLength = this.state.task.length;\n\n    if (taskLength < 5 || taskLength > 25) {\n      this.setState({ taskError: true });\n      error = true;\n    } else {\n      this.setState({ taskError: false });\n    }\n\n    if (error) {\n      this.setState({ formError: true });\n      return;\n    }\n\n    this.setState({ formError: false });\n\n    const formattedFormData = {\n      ...this.state,\n      taskError: null,\n      formError: null\n    };\n\n    fetch(`${BASE_URL}/todo/${this.props.item.id}.json`, {\n      method: \"PUT\",\n      body: JSON.stringify(formattedFormData)\n    }).then(() => {\n      this.props.onSave();\n    });\n  };\n\n  handleOnCloseClick = () => {\n    this.props.onClose();\n  };\n\n  render() {\n    const { item } = this.props;\n    const { task, taskError } = this.state;\n\n    return (\n      <div key={item.id}>\n        <List.Item>\n          <Form.Field>\n            <input\n              type=\"text\"\n              value={task}\n              name=\"task\"\n              onChange={this.handleOnChange}\n            />\n            {taskError ? (\n              <Message negative>\n                <Message.Header>Incorrect input</Message.Header>\n                <p>The task should be between 5 and 25 characters</p>\n              </Message>\n            ) : null}\n          </Form.Field>\n        </List.Item>\n        <Button\n          size=\"small\"\n          attached=\"left\"\n          positive\n          icon\n          onClick={this.handleOnSaveClick}\n          disabled={!task}\n        >\n          <Icon name=\"save\" />\n        </Button>\n        <Button\n          size=\"small\"\n          attached=\"right\"\n          icon\n          onClick={this.handleOnCloseClick}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <Checkbox done={item.done} id={item.id} item={item.task} />\n        <hr />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}