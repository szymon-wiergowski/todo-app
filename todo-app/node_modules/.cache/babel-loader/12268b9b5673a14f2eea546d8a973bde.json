{"ast":null,"code":"import _slicedToArray from\"/home/szymon/Desktop/ToDo-App/todo-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{Redirect}from\"react-router\";import{Link}from\"react-router-dom\";import firebase from\"firebase\";import{Button,Form,Grid,Header,Segment,Message}from\"semantic-ui-react\";export default(function(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),email=_useState2[0],setEmail=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),redirect=_useState6[0],setRedirect=_useState6[1];var handleOnChange=function handleOnChange(event){var _event$target=event.target,name=_event$target.name,value=_event$target.value;if(name===\"email\"){setEmail(value);}if(name===\"password\"){setPassword(value);}};var handleOnClick=function handleOnClick(event){event.preventDefault();signUp();};var signUp=function signUp(){firebase.auth().createUserWithEmailAndPassword(email,password).then(function(){setRedirect(true);});};if(redirect){return React.createElement(Redirect,{to:\"/\"});}return React.createElement(Grid,{textAlign:\"center\",style:{height:\"100vh\"},verticalAlign:\"middle\"},React.createElement(Grid.Column,{style:{maxWidth:450}},React.createElement(Header,{as:\"h2\",color:\"blue\",textAlign:\"center\"},\"Welcome\"),React.createElement(Form,{size:\"large\"},React.createElement(Segment,{stacked:true},React.createElement(Form.Input,{fluid:true,icon:\"user\",iconPosition:\"left\",placeholder:\"E-mail address\",autoComplete:\"username\",value:email,name:\"email\",onChange:handleOnChange}),React.createElement(Form.Input,{fluid:true,icon:\"lock\",iconPosition:\"left\",placeholder:\"Password\",autoComplete:\"current-password\",type:\"password\",value:password,name:\"password\",onChange:handleOnChange}),React.createElement(Button,{color:\"blue\",fluid:true,size:\"large\",onClick:handleOnClick},\"Register\"))),React.createElement(Message,null,\"Already register? \",React.createElement(Link,{to:\"/sign-in\"},\"Sign In\"))));});","map":{"version":3,"sources":["/home/szymon/Desktop/ToDo-App/todo-app/src/components/SignUp.js"],"names":["React","useState","Redirect","Link","firebase","Button","Form","Grid","Header","Segment","Message","email","setEmail","password","setPassword","redirect","setRedirect","handleOnChange","event","target","name","value","handleOnClick","preventDefault","signUp","auth","createUserWithEmailAndPassword","then","height","maxWidth"],"mappings":"yHAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,QAAT,KAAyB,cAAzB,CACA,OAASC,IAAT,KAAqB,kBAArB,CAEA,MAAOC,CAAAA,QAAP,KAAqB,UAArB,CAEA,OACEC,MADF,CAEEC,IAFF,CAGEC,IAHF,CAIEC,MAJF,CAKEC,OALF,CAMEC,OANF,KAOO,mBAPP,CASA,eAAe,UAAM,eACOT,QAAQ,CAAC,EAAD,CADf,wCACZU,KADY,eACLC,QADK,8BAEaX,QAAQ,CAAC,EAAD,CAFrB,yCAEZY,QAFY,eAEFC,WAFE,8BAGab,QAAQ,CAAC,KAAD,CAHrB,yCAGZc,QAHY,eAGFC,WAHE,eAKnB,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAAC,KAAK,CAAI,mBACNA,KAAK,CAACC,MADA,CACtBC,IADsB,eACtBA,IADsB,CAChBC,KADgB,eAChBA,KADgB,CAG9B,GAAID,IAAI,GAAK,OAAb,CAAsB,CACpBR,QAAQ,CAACS,KAAD,CAAR,CACD,CACD,GAAID,IAAI,GAAK,UAAb,CAAyB,CACvBN,WAAW,CAACO,KAAD,CAAX,CACD,CACF,CATD,CAWA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAJ,KAAK,CAAI,CAC7BA,KAAK,CAACK,cAAN,GAEAC,MAAM,GACP,CAJD,CAMA,GAAMA,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACnBpB,QAAQ,CACLqB,IADH,GAEGC,8BAFH,CAEkCf,KAFlC,CAEyCE,QAFzC,EAGGc,IAHH,CAGQ,UAAM,CACVX,WAAW,CAAC,IAAD,CAAX,CACD,CALH,EAMD,CAPD,CASA,GAAID,QAAJ,CAAc,CACZ,MAAO,qBAAC,QAAD,EAAU,EAAE,CAAE,GAAd,EAAP,CACD,CAED,MACE,qBAAC,IAAD,EAAM,SAAS,CAAC,QAAhB,CAAyB,KAAK,CAAE,CAAEa,MAAM,CAAE,OAAV,CAAhC,CAAqD,aAAa,CAAC,QAAnE,EACE,oBAAC,IAAD,CAAM,MAAN,EAAa,KAAK,CAAE,CAAEC,QAAQ,CAAE,GAAZ,CAApB,EACE,oBAAC,MAAD,EAAQ,EAAE,CAAC,IAAX,CAAgB,KAAK,CAAC,MAAtB,CAA6B,SAAS,CAAC,QAAvC,EACG,SADH,CADF,CAIE,oBAAC,IAAD,EAAM,IAAI,CAAC,OAAX,EACE,oBAAC,OAAD,EAAS,OAAO,KAAhB,EACE,oBAAC,IAAD,CAAM,KAAN,EACE,KAAK,KADP,CAEE,IAAI,CAAC,MAFP,CAGE,YAAY,CAAC,MAHf,CAIE,WAAW,CAAC,gBAJd,CAKE,YAAY,CAAC,UALf,CAME,KAAK,CAAElB,KANT,CAOE,IAAI,CAAC,OAPP,CAQE,QAAQ,CAAEM,cARZ,EADF,CAWE,oBAAC,IAAD,CAAM,KAAN,EACE,KAAK,KADP,CAEE,IAAI,CAAC,MAFP,CAGE,YAAY,CAAC,MAHf,CAIE,WAAW,CAAC,UAJd,CAKE,YAAY,CAAC,kBALf,CAME,IAAI,CAAC,UANP,CAOE,KAAK,CAAEJ,QAPT,CAQE,IAAI,CAAC,UARP,CASE,QAAQ,CAAEI,cATZ,EAXF,CAsBE,oBAAC,MAAD,EAAQ,KAAK,CAAC,MAAd,CAAqB,KAAK,KAA1B,CAA2B,IAAI,CAAC,OAAhC,CAAwC,OAAO,CAAEK,aAAjD,EACG,UADH,CAtBF,CADF,CAJF,CAgCE,oBAAC,OAAD,2BACoB,oBAAC,IAAD,EAAM,EAAE,CAAC,UAAT,YADpB,CAhCF,CADF,CADF,CAwCD,CA3ED","sourcesContent":["import React, { useState } from \"react\";\nimport { Redirect } from \"react-router\";\nimport { Link } from \"react-router-dom\";\n\nimport firebase from \"firebase\";\n\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Segment,\n  Message\n} from \"semantic-ui-react\";\n\nexport default () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [redirect, setRedirect] = useState(false);\n\n  const handleOnChange = event => {\n    const { name, value } = event.target;\n\n    if (name === \"email\") {\n      setEmail(value);\n    }\n    if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const handleOnClick = event => {\n    event.preventDefault();\n\n    signUp();\n  };\n\n  const signUp = () => {\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then(() => {\n        setRedirect(true);\n      });\n  };\n\n  if (redirect) {\n    return <Redirect to={\"/\"} />;\n  }\n\n  return (\n    <Grid textAlign=\"center\" style={{ height: \"100vh\" }} verticalAlign=\"middle\">\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as=\"h2\" color=\"blue\" textAlign=\"center\">\n          {\"Welcome\"}\n        </Header>\n        <Form size=\"large\">\n          <Segment stacked>\n            <Form.Input\n              fluid\n              icon=\"user\"\n              iconPosition=\"left\"\n              placeholder=\"E-mail address\"\n              autoComplete=\"username\"\n              value={email}\n              name=\"email\"\n              onChange={handleOnChange}\n            />\n            <Form.Input\n              fluid\n              icon=\"lock\"\n              iconPosition=\"left\"\n              placeholder=\"Password\"\n              autoComplete=\"current-password\"\n              type=\"password\"\n              value={password}\n              name=\"password\"\n              onChange={handleOnChange}\n            />\n            <Button color=\"blue\" fluid size=\"large\" onClick={handleOnClick}>\n              {\"Register\"}\n            </Button>\n          </Segment>\n        </Form>\n        <Message>\n          Already register? <Link to=\"/sign-in\">Sign In</Link>\n        </Message>\n      </Grid.Column>\n    </Grid>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}