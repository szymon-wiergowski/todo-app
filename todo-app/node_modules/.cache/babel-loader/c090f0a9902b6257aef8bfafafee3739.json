{"ast":null,"code":"import _slicedToArray from \"/home/szymon/Desktop/ToDo-App/todo-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/szymon/Desktop/ToDo-App/todo-app/src/components/ToDoBoard.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { List, Segment } from \"semantic-ui-react\";\nimport ToDoItem from \"./ToDoItem\";\nimport ToDoEditItem from \"./ToDoEditItem\";\nexport const BASE_URL = \"https://rest-api-jfdz12-sw.firebaseio.com\";\n\nconst ToDoListBoard = props => {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        editTaskId = _useState2[0],\n        setEditTaskId = _useState2[1];\n\n  const handleOnEdit = markedId => {\n    setEditTaskId(markedId);\n  };\n\n  const handleOnClose = () => {\n    setEditTaskId(null);\n  };\n\n  const handleOnSave = () => {\n    props.onSave();\n    setEditTaskId(null);\n  };\n\n  const todo = props.todo,\n        onDelete = props.onDelete,\n        onCheck = props.onCheck;\n  return React.createElement(Segment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(List, {\n    divided: true,\n    relaxed: true,\n    size: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, todo.map(item => {\n    return editTaskId === item.id ? React.createElement(ToDoEditItem, {\n      key: item.id,\n      todo: todo,\n      done: item.done,\n      id: item.id,\n      item: item,\n      onClose: handleOnClose,\n      onSave: handleOnSave,\n      onDelete: onDelete,\n      onCheck: onCheck,\n      onEdit: handleOnEdit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }) : React.createElement(ToDoItem, {\n      key: item.id,\n      todo: todo,\n      done: item.done,\n      id: item.id,\n      item: item,\n      onDelete: onDelete,\n      onCheck: onCheck,\n      onEdit: handleOnEdit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    });\n  })));\n};\n\nexport default ToDoListBoard; // export default class ToDoListBoard extends React.Component {\n//   state = {\n//     editTaskId: null\n//   };\n//   handleOnEdit = markedId => {\n//     this.setState({\n//       editTaskId: markedId\n//     });\n//   };\n//   handleOnClose = () => {\n//     this.setState({\n//       editTaskId: null\n//     });\n//   };\n//   handleOnSave = () => {\n//     this.props.onSave();\n//     this.setState({\n//       editTaskId: null\n//     });\n//   };\n//   render() {\n//     const { editTaskId } = this.state;\n//     const { todo, onDelete, onCheck } = this.props;\n//     return (\n//       <Segment>\n//           <List divided relaxed size=\"large\">\n//             {todo.map(item => {\n//               return editTaskId === item.id ? (\n//                 <ToDoEditItem\n//                   key={item.id}\n//                   todo={todo}\n//                   done={item.done}\n//                   id={item.id}\n//                   item={item}\n//                   onClose={this.handleOnClose}\n//                   onSave={this.handleOnSave}\n//                   onDelete={onDelete}\n//                   onCheck={onCheck}\n//                   onEdit={this.handleOnEdit}\n//                 />\n//               ) : (\n//                 <ToDoItem\n//                   key={item.id}\n//                   todo={todo}\n//                   done={item.done}\n//                   id={item.id}\n//                   item={item}\n//                   onDelete={onDelete}\n//                   onCheck={onCheck}\n//                   onEdit={this.handleOnEdit}\n//                 />\n//               );\n//             })}\n//           </List>\n//       </Segment>\n//     );\n//   }\n// }","map":{"version":3,"sources":["/home/szymon/Desktop/ToDo-App/todo-app/src/components/ToDoBoard.js"],"names":["React","useEffect","useState","List","Segment","ToDoItem","ToDoEditItem","BASE_URL","ToDoListBoard","props","editTaskId","setEditTaskId","handleOnEdit","markedId","handleOnClose","handleOnSave","onSave","todo","onDelete","onCheck","map","item","id","done"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,IAAT,EAAeC,OAAf,QAA8B,mBAA9B;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,OAAO,MAAMC,QAAQ,GAAG,2CAAjB;;AAEP,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA,oBACKP,QAAQ,CAAC,IAAD,CADb;AAAA;AAAA,QACxBQ,UADwB;AAAA,QACZC,aADY;;AAG/B,QAAMC,YAAY,GAAGC,QAAQ,IAAI;AAC/BF,IAAAA,aAAa,CAACE,QAAD,CAAb;AACD,GAFD;;AAIA,QAAMC,aAAa,GAAG,MAAM;AAC1BH,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAFD;;AAIA,QAAMI,YAAY,GAAG,MAAM;AACzBN,IAAAA,KAAK,CAACO,MAAN;AACAL,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAHD;;AAX+B,QAgBvBM,IAhBuB,GAgBKR,KAhBL,CAgBvBQ,IAhBuB;AAAA,QAgBjBC,QAhBiB,GAgBKT,KAhBL,CAgBjBS,QAhBiB;AAAA,QAgBPC,OAhBO,GAgBKV,KAhBL,CAgBPU,OAhBO;AAkB/B,SACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,OAAO,MAAb;AAAc,IAAA,OAAO,MAArB;AAAsB,IAAA,IAAI,EAAC,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,IAAI,CAACG,GAAL,CAASC,IAAI,IAAI;AAChB,WAAOX,UAAU,KAAKW,IAAI,CAACC,EAApB,GACL,oBAAC,YAAD;AACE,MAAA,GAAG,EAAED,IAAI,CAACC,EADZ;AAEE,MAAA,IAAI,EAAEL,IAFR;AAGE,MAAA,IAAI,EAAEI,IAAI,CAACE,IAHb;AAIE,MAAA,EAAE,EAAEF,IAAI,CAACC,EAJX;AAKE,MAAA,IAAI,EAAED,IALR;AAME,MAAA,OAAO,EAAEP,aANX;AAOE,MAAA,MAAM,EAAEC,YAPV;AAQE,MAAA,QAAQ,EAAEG,QARZ;AASE,MAAA,OAAO,EAAEC,OATX;AAUE,MAAA,MAAM,EAAEP,YAVV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADK,GAcL,oBAAC,QAAD;AACE,MAAA,GAAG,EAAES,IAAI,CAACC,EADZ;AAEE,MAAA,IAAI,EAAEL,IAFR;AAGE,MAAA,IAAI,EAAEI,IAAI,CAACE,IAHb;AAIE,MAAA,EAAE,EAAEF,IAAI,CAACC,EAJX;AAKE,MAAA,IAAI,EAAED,IALR;AAME,MAAA,QAAQ,EAAEH,QANZ;AAOE,MAAA,OAAO,EAAEC,OAPX;AAQE,MAAA,MAAM,EAAEP,YARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF;AAyBD,GA1BA,CADH,CADF,CADF;AAiCD,CAnDD;;AAqDA,eAAeJ,aAAf,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport { List, Segment } from \"semantic-ui-react\";\n\nimport ToDoItem from \"./ToDoItem\";\nimport ToDoEditItem from \"./ToDoEditItem\";\n\nexport const BASE_URL = \"https://rest-api-jfdz12-sw.firebaseio.com\";\n\nconst ToDoListBoard = (props) => {\n  const [editTaskId, setEditTaskId] = useState(null);\n\n  const handleOnEdit = markedId => {\n    setEditTaskId(markedId);\n  };\n\n  const handleOnClose = () => {\n    setEditTaskId(null);\n  };\n\n  const handleOnSave = () => {\n    props.onSave();\n    setEditTaskId(null);\n  };\n\n  const { todo, onDelete, onCheck } = props;\n\n  return (\n    <Segment>\n      <List divided relaxed size=\"large\">\n        {todo.map(item => {\n          return editTaskId === item.id ? (\n            <ToDoEditItem\n              key={item.id}\n              todo={todo}\n              done={item.done}\n              id={item.id}\n              item={item}\n              onClose={handleOnClose}\n              onSave={handleOnSave}\n              onDelete={onDelete}\n              onCheck={onCheck}\n              onEdit={handleOnEdit}\n            />\n          ) : (\n            <ToDoItem\n              key={item.id}\n              todo={todo}\n              done={item.done}\n              id={item.id}\n              item={item}\n              onDelete={onDelete}\n              onCheck={onCheck}\n              onEdit={handleOnEdit}\n            />\n          );\n        })}\n      </List>\n    </Segment>\n  );\n};\n\nexport default ToDoListBoard;\n\n// export default class ToDoListBoard extends React.Component {\n//   state = {\n//     editTaskId: null\n//   };\n\n//   handleOnEdit = markedId => {\n//     this.setState({\n//       editTaskId: markedId\n//     });\n//   };\n\n//   handleOnClose = () => {\n//     this.setState({\n//       editTaskId: null\n//     });\n//   };\n\n//   handleOnSave = () => {\n//     this.props.onSave();\n//     this.setState({\n//       editTaskId: null\n//     });\n//   };\n\n//   render() {\n//     const { editTaskId } = this.state;\n//     const { todo, onDelete, onCheck } = this.props;\n\n//     return (\n//       <Segment>\n//           <List divided relaxed size=\"large\">\n//             {todo.map(item => {\n//               return editTaskId === item.id ? (\n//                 <ToDoEditItem\n//                   key={item.id}\n//                   todo={todo}\n//                   done={item.done}\n//                   id={item.id}\n//                   item={item}\n//                   onClose={this.handleOnClose}\n//                   onSave={this.handleOnSave}\n//                   onDelete={onDelete}\n//                   onCheck={onCheck}\n//                   onEdit={this.handleOnEdit}\n//                 />\n//               ) : (\n//                 <ToDoItem\n//                   key={item.id}\n//                   todo={todo}\n//                   done={item.done}\n//                   id={item.id}\n//                   item={item}\n//                   onDelete={onDelete}\n//                   onCheck={onCheck}\n//                   onEdit={this.handleOnEdit}\n//                 />\n//               );\n//             })}\n//           </List>\n//       </Segment>\n//     );\n//   }\n// }\n"]},"metadata":{},"sourceType":"module"}