{"ast":null,"code":"var _jsxFileName = \"/home/szymon/Desktop/homeworks/jfdz12-homeworks/zadanie_10/my-app/src/components/ToDoEditList.js\";\nimport React from \"react\";\nimport { Button, Form, Icon, List } from \"semantic-ui-react\";\nimport { BASE_URL } from \"./ToDo\";\nimport Checkbox from \"./Checkbox\";\nexport default class ToDoEditList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = { ...this.props.item,\n      id: null\n    };\n\n    this.handleOnChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleOnSaveClick = event => {\n      event.preventDefault();\n\n      if (this.state.task.length < 5) {\n        return alert(\"The task name should be over 5 characters!\");\n      } else {\n        const formattedFormData = { ...this.state\n        };\n        fetch(`${BASE_URL}/todo/${this.props.item.id}.json`, {\n          method: \"PUT\",\n          body: JSON.stringify(formattedFormData)\n        }).then(() => {\n          this.props.onSave();\n        });\n      }\n    };\n\n    this.handleOnCloseClick = () => {\n      this.props.onClose();\n    };\n  }\n\n  render() {\n    const {\n      item\n    } = this.props;\n    const {\n      task\n    } = this.state;\n    return React.createElement(\"div\", {\n      key: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(List.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      value: task,\n      name: \"task\",\n      onChange: this.handleOnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }))), React.createElement(Button, {\n      size: \"mini\",\n      attached: \"left\",\n      positive: true,\n      icon: true,\n      onClick: this.handleOnSaveClick,\n      disabled: !task,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"save\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })), React.createElement(Button, {\n      size: \"mini\",\n      attached: \"right\",\n      icon: true,\n      onClick: this.handleOnCloseClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"close\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })), React.createElement(Checkbox, {\n      done: item.done,\n      id: item.id,\n      item: item.task,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/szymon/Desktop/homeworks/jfdz12-homeworks/zadanie_10/my-app/src/components/ToDoEditList.js"],"names":["React","Button","Form","Icon","List","BASE_URL","Checkbox","ToDoEditList","Component","state","props","item","id","handleOnChange","event","setState","target","name","value","handleOnSaveClick","preventDefault","task","length","alert","formattedFormData","fetch","method","body","JSON","stringify","then","onSave","handleOnCloseClick","onClose","render","done"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,IAAvB,EAA6BC,IAA7B,QAAyC,mBAAzC;AAEA,SAASC,QAAT,QAAyB,QAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,eAAe,MAAMC,YAAN,SAA2BP,KAAK,CAACQ,SAAjC,CAA2C;AAAA;AAAA;AAAA,SACxDC,KADwD,GAChD,EACN,GAAG,KAAKC,KAAL,CAAWC,IADR;AAENC,MAAAA,EAAE,EAAE;AAFE,KADgD;;AAAA,SAMxDC,cANwD,GAMvCC,KAAK,IAAI;AACxB,WAAKC,QAAL,CAAc;AACZ,SAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBH,KAAK,CAACE,MAAN,CAAaE;AADtB,OAAd;AAGD,KAVuD;;AAAA,SAYxDC,iBAZwD,GAYpCL,KAAK,IAAI;AAC3BA,MAAAA,KAAK,CAACM,cAAN;;AAEA,UAAI,KAAKX,KAAL,CAAWY,IAAX,CAAgBC,MAAhB,GAAyB,CAA7B,EAAgC;AAC9B,eAAOC,KAAK,CAAC,4CAAD,CAAZ;AACD,OAFD,MAEO;AACL,cAAMC,iBAAiB,GAAG,EACxB,GAAG,KAAKf;AADgB,SAA1B;AAIAgB,QAAAA,KAAK,CAAE,GAAEpB,QAAS,SAAQ,KAAKK,KAAL,CAAWC,IAAX,CAAgBC,EAAG,OAAxC,EAAgD;AACnDc,UAAAA,MAAM,EAAE,KAD2C;AAEnDC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,iBAAf;AAF6C,SAAhD,CAAL,CAGGM,IAHH,CAGQ,MAAM;AACZ,eAAKpB,KAAL,CAAWqB,MAAX;AACD,SALD;AAMD;AACF,KA7BuD;;AAAA,SA+BxDC,kBA/BwD,GA+BnC,MAAM;AACzB,WAAKtB,KAAL,CAAWuB,OAAX;AACD,KAjCuD;AAAA;;AAmCxDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEvB,MAAAA;AAAF,QAAW,KAAKD,KAAtB;AACA,UAAM;AAAEW,MAAAA;AAAF,QAAW,KAAKZ,KAAtB;AAEA,WACE;AAAK,MAAA,GAAG,EAAEE,IAAI,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,KAAK,EAAES,IAAd;AAAoB,MAAA,IAAI,EAAC,MAAzB;AAAgC,MAAA,QAAQ,EAAE,KAAKR,cAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,EAME,oBAAC,MAAD;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,QAAQ,EAAC,MAFX;AAGE,MAAA,QAAQ,MAHV;AAIE,MAAA,IAAI,MAJN;AAKE,MAAA,OAAO,EAAE,KAAKM,iBALhB;AAME,MAAA,QAAQ,EAAE,CAACE,IANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CANF,EAgBE,oBAAC,MAAD;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,QAAQ,EAAC,OAFX;AAGE,MAAA,IAAI,MAHN;AAIE,MAAA,OAAO,EAAE,KAAKW,kBAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CAhBF,EAwBE,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAErB,IAAI,CAACwB,IAArB;AAA2B,MAAA,EAAE,EAAExB,IAAI,CAACC,EAApC;AAAwC,MAAA,IAAI,EAAED,IAAI,CAACU,IAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxBF,EAyBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzBF,CADF;AA6BD;;AApEuD","sourcesContent":["import React from \"react\";\n\nimport { Button, Form, Icon, List } from \"semantic-ui-react\";\n\nimport { BASE_URL } from \"./ToDo\";\nimport Checkbox from \"./Checkbox\";\n\nexport default class ToDoEditList extends React.Component {\n  state = {\n    ...this.props.item,\n    id: null\n  };\n\n  handleOnChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleOnSaveClick = event => {\n    event.preventDefault();\n\n    if (this.state.task.length < 5) {\n      return alert(\"The task name should be over 5 characters!\");\n    } else {\n      const formattedFormData = {\n        ...this.state\n      };\n\n      fetch(`${BASE_URL}/todo/${this.props.item.id}.json`, {\n        method: \"PUT\",\n        body: JSON.stringify(formattedFormData)\n      }).then(() => {\n        this.props.onSave();\n      });\n    }\n  };\n\n  handleOnCloseClick = () => {\n    this.props.onClose();\n  };\n\n  render() {\n    const { item } = this.props;\n    const { task } = this.state;\n\n    return (\n      <div key={item.id}>\n        <List.Item>\n          <Form.Field>\n            <input value={task} name=\"task\" onChange={this.handleOnChange} />\n          </Form.Field>\n        </List.Item>\n        <Button\n          size=\"mini\"\n          attached=\"left\"\n          positive\n          icon\n          onClick={this.handleOnSaveClick}\n          disabled={!task}\n        >\n          <Icon name=\"save\" />\n        </Button>\n        <Button\n          size=\"mini\"\n          attached=\"right\"\n          icon\n          onClick={this.handleOnCloseClick}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <Checkbox done={item.done} id={item.id} item={item.task} />\n        <hr />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}